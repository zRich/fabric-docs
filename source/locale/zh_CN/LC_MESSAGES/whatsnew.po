# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Jiachuan Li <jiachuan.li@outlook.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-01 12:09+0800\n"
"PO-Revision-Date: 2019-04-22 19:57+0000\n"
"Last-Translator: Jiachuan Li <jiachuan.li@outlook.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/hyperledger/teams/97220/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/whatsnew.rst:2
msgid "What's new in the v2.0 Alpha"
msgstr "v2.0 Alpha 新功能"

#: ../../source/whatsnew.rst:5
msgid "A word about the Alpha release"
msgstr "有关 Alpha release 的一句话概要"

#: ../../source/whatsnew.rst:7
msgid ""
"The Alpha release of Hyperledger Fabric v2.0 allows users to try out two "
"exciting new features --- the new Fabric chaincode lifecycle and FabToken. "
"The Alpha release is being offered to provide users a preview of new "
"capabilities and is not meant to be used in production. Additionally there "
"is no upgrade support to the v2.0 Alpha release, and no intended upgrade "
"support from the the Alpha release to future versions of v2.x."
msgstr ""
"Hyperledger v2.0 的 Alpha release 版本允许用户可以尝试两种非常棒的功能 --- 全新的 Fabric chaincode"
" 生命周期以及 FabToken。Alpha release "
"正在被用来为用户提供关于这些新能力的一个预览，这并不代表她可以被用于生产环境。另外现在还没有对于 v2.0 Alpha release "
"的升级支持，也没有任何从 Alpha release 到未来的 v2.x 版本的升级支持的打算。"

#: ../../source/whatsnew.rst:15
msgid "Fabric chaincode lifecycle"
msgstr "Fabric chaincode 生命周期"

#: ../../source/whatsnew.rst:17
msgid ""
"The Fabric 2.0 Alpha introduces decentralized governance for chaincode, with"
" a new process for installing a chaincode on your peers and starting it on a"
" channel. The new Fabric chaincode lifecycle allows multiple organizations "
"to come to agreement on the parameters of a chaincode, such as the chaincode"
" endorsement policy, before it can be used to interact with the ledger. The "
"new model offers several improvements over the previous lifecycle:"
msgstr ""
"Fabric 2.0 Alpha 引入了对 chaincode 的去中心化的管理，带来了一个在你的 peers 安装一个 chaincode 并且在一个"
" channel 中启动 chaincode 的新流程。这个全新的 Fabric chaincode 生命周期在一个 chaincode "
"能够被用于同账本进行交互之前，允许多个组织对于一个 chaincode 的参数达成协议，比如 chaincode "
"背书策略。这个新的模型相对于以前的生命周期而言，提供了多个改进："

#: ../../source/whatsnew.rst:25
msgid ""
"**Multiple organizations must agree to the parameters of a chaincode:** In "
"the release 1.x versions of Fabric, one organization had the ability to set "
"parameters of a chaincode (for instance the endorsement policy) for all "
"other channel members. The new Fabric chaincode lifecycle is more flexible "
"since it supports both centralized trust models (such as that of the "
"previous lifecycle model) as well as decentralized models requiring a "
"sufficient number of organizations to agree on an endorsement policy before "
"it goes into effect."
msgstr ""
"**多个组织必须同意一个 chaincode 的参数：** 在 Fabric release 1.x 版本中，一个组织有能力为所有的 channel "
"成员设置一个 chaincode 的参数（比如背书策略）。新的 Fabric chaincode "
"生命周期变得更加灵活，因为她及支持中心化的信任模型（就像之前的生命周期模型），同时也支持在一个背书策略起作用前，必须要有足够有效的数量的组织同意这个背书策略的这种去中心化的模型。"

#: ../../source/whatsnew.rst:33
msgid ""
"**Safer chaincode upgrade process:** In the previous chaincode lifecycle, "
"the upgrade transaction could be issued by a single organization, creating a"
" risk for a channel member that had not yet installed the new chaincode. The"
" new model allows for a chaincode to be upgraded only after a sufficient "
"number of organizations have approved the upgrade."
msgstr ""
"**更安全的 chaincode 升级流程：** 在以前的 chaincode 生命周期中，升级的交易可以有单独的一个组织来发起，这就为尚未安装新的 "
"chaincode 的 channel 成员带来了风险。新的模型允许一个 chaincode 只有当有效数量的组织已经批准了这个升级之后才会被升级。"

#: ../../source/whatsnew.rst:39
msgid ""
"**Easier endorsement policy updates:** Fabric lifecycle allows you to change"
" an endorsement policy without having to repackage or reinstall the "
"chaincode. Users can also take advantage of a new default policy that "
"requires endorsement from a majority of members on the channel. This policy "
"is updated automatically when organizations are added or removed from the "
"channel."
msgstr ""
"**更简单的背书策略更新：** Fabric 生命周期允许你能够改变一个背书策略而不需要必须打包或者重新安装 "
"chaincode。用户也可以利用一个新的必须要求 channel 上的主要成员提供背书的默认策略。这个策略会在组织被添加到或者从 channel "
"中被移除的时候自动被更新。"

#: ../../source/whatsnew.rst:45
msgid ""
"**Inspectable chaincode packages:** The Fabric lifecycle packages chaincode "
"in easily readable tar files. This makes it easier to inspect the chaincode "
"package and coordinate installation across multiple organizations."
msgstr ""
"**可检查的 chaincode 包：** Fabric 生命周期将 chaincode 打包成了更容易阅读的 tar 文件。这使其更容易来检查 "
"chaincode 包，并且在多个组织间协调安装。"

#: ../../source/whatsnew.rst:49
msgid ""
"**Start multiple chaincodes on a channel using one package:** The previous "
"lifecycle defined each chaincode on the channel using a name and version "
"that was specified when the chaincode package was installed. You can now use"
" a single chaincode package and deploy it multiple times with different "
"names on the same or different channel."
msgstr ""
"**在一个 channel 上使用一个包来启动多个 chaincode：** 之前的生命周期使用一个在 chaincode "
"包被安装的时候所指定的名字和版本来定义 channel 上的每个 chaincode。现在你可以使用不同名字的同一个 chaincode "
"包并且可以把它多次的部署到相同或者不同的 channel 上去。"

#: ../../source/whatsnew.rst:56
msgid "Using the new chaincode lifecycle"
msgstr "使用新的 chaincode 生命周期"

#: ../../source/whatsnew.rst:58
msgid ""
"Use the following tutorials to get started with the new chaincode lifecycle:"
msgstr "使用下边的教程来开始新的 chaincode 生命周期："

#: ../../source/whatsnew.rst:60
msgid ""
":doc:`chaincode4noah`: Provides a detailed overview of the steps required to"
" install and define a chaincode, as well as the capabilities available with "
"the new model."
msgstr ""
":doc:`chaincode4noah`：提供了一个关于安装及定义一个 chaincode 所需步骤的详细的概览，也包括新的模型具有的可用的新能力。"

#: ../../source/whatsnew.rst:64
msgid ""
":doc:`build_network`: If you want to start using the new lifecycle right "
"away, the BYFN tutorial has been updated to use the "
":doc:`commands/peerlifecycle` CLI to install and define chaincode on a "
"sample network."
msgstr ""
":doc:`build_network`：如果你现在就想使用新的生命周期的话，BYFN 教程已经被更新成了在一个例子网络上，使用 "
":doc:`commands/peerlifecycle` CLI 来安装和定义 chaincode。"

#: ../../source/whatsnew.rst:69
msgid ""
":doc:`private_data_tutorial`: Has been updated to demonstrate how to use "
":doc:`private-data/private-data` collections with the new chaincode "
"lifecycle."
msgstr ""
":doc:`private_data_tutorial`：已经被更新用来表现如何通过新的 chaincode 生命周期来使用 :doc"
":`private-data/private-data` 集合。"

#: ../../source/whatsnew.rst:73
msgid ""
":doc:`endorsement-policies`: Learn how the new lifecycle allows you to use "
"policies in the channel configuration as chaincode endorsement policies."
msgstr ""
":doc:`endorsement-policies`：了解新的生命周期是如何允许你使用在 channel 配置中的策略作为 chaincode "
"的背书策略的。"

#: ../../source/whatsnew.rst:78
msgid "Restrictions and limitations"
msgstr "限制以及局限性"

#: ../../source/whatsnew.rst:80
msgid ""
"The new Fabric chaincode lifecycle in the v2.0 Alpha release is not yet "
"feature complete. Specifically, be aware of the following limitations in the"
" Alpha release:"
msgstr ""
"在 v2.0 Alpha release 中的新的 Fabric chaincode 生命周期功能还没有彻底完成。特别的，要注意下边这些在 Alpha "
"release 中的局限性："

#: ../../source/whatsnew.rst:83
msgid "CouchDB indexes are not yet supported"
msgstr "尚未支持 CoachDB 索引"

#: ../../source/whatsnew.rst:84
msgid ""
"Chaincodes defined with the new lifecycle are not yet discoverable via "
"service discovery"
msgstr "通过新的生命周期定义的 chaincodes 还不能通过服务发现被找到"

#: ../../source/whatsnew.rst:87
msgid "These limitations will be resolved after the Alpha release."
msgstr "这些限制会在 Alpha release 之后被解决。"

#: ../../source/whatsnew.rst:90
msgid "FabToken"
msgstr "FabToken"

#: ../../source/whatsnew.rst:92
msgid ""
"The Fabric 2.0 Alpha also provides users the ability to easily represent "
"assets as tokens on Fabric channels. FabToken is a token management system "
"that uses an Unspent Transaction Output (UTXO) model to issue, transfer, and"
" redeem tokens using the identity and membership infrastructure provided by "
"Hyperledger Fabric."
msgstr ""
"Fabric 2.0 Alpha 也为用户提供了在 Fabric channels 上非常简单就能将资产表现为 tokens 的能力。FabToken "
"是一个 token 管理系统，它使用了由 Hyperledger Fabric 提供的身份及成员的基础设施，使用一个 Unspent "
"Transaction Output（UTXO）的模型来发行、交易以及赎回 tokens。"

#: ../../source/whatsnew.rst:98
msgid ""
":doc:`token/FabToken`: This operations guide provides a detailed overview of"
" how to use tokens on a Fabric network. The guide also includes an example "
"on how to create and transfer tokens using the :doc:`commands/token` CLI."
msgstr ""
":doc:`token/FabToken`：这个操作指南提供了一个关于在一个 Fabric 网络上如何使用 tokens "
"的详细的概览。这个指南也包含了一个如何使用 :doc:`commands/token` CLI 来创建和交换 tokens 的例子。"

#: ../../source/whatsnew.rst:104
msgid "Alpine images"
msgstr "Alphine 镜像"

#: ../../source/whatsnew.rst:106
msgid ""
"Starting with v2.0, Hyperledger Fabric Docker images will use Alpine Linux, "
"a security-oriented, lightweight Linux distribution. This means that Docker "
"images are now much smaller, providing faster download and startup times, as"
" well as taking up less disk space on host systems. Alpine Linux is designed"
" from the ground up with security in mind, and the minimalist nature of the "
"Alpine distribution greatly reduces the risk of security vulnerabilities."
msgstr ""
"从 v2.0 开始，Hyperledger Fabric 镜像将会使用 Alphine Linux，一个面向安全的、轻量的 Linux "
"distribution。这意味着 Docker 镜像现在更小了，提供了更快的下载和启动时间，并且在 host 系统上占用更小的磁盘空间。Alphine"
" Linux 是彻底的安全优先的设计，并且 Alphine distribution 的极简主义本质很大程度的减小了安全缺陷的风险。"

#: ../../source/whatsnew.rst:115
msgid "Raft ordering service"
msgstr "Raft 排序服务"

#: ../../source/whatsnew.rst:117
msgid ""
"Introduced in v1.4.1, `Raft <https://raft.github.io/raft.pdf>`_ is a crash "
"fault tolerant (CFT) ordering service based on an implementation of Raft "
"protocol in `etcd <https://coreos.com/etcd/>`_. Raft follows a \"leader and "
"follower\" model, where a leader node is elected (per channel) and its "
"decisions are replicated to the followers. Raft ordering services should be "
"easier to set up and manage than Kafka-based ordering services, and their "
"design allows organizations spread out across the world to contribute nodes "
"to a decentralized ordering service."
msgstr ""
"在 v1.4.1 中被引入，`Raft <https://raft.github.io/raft.pdf>`_ 是一个崩溃容错 fault "
"tolerant (CFT) 排序服务，基于一个在 `etcd <https://coreos.com/etcd/>`_ 中的 Raft "
"协议的实现。Raft 遵循一个 “leader 和 follower” 模型，一个 leader 节点被选举出来（每个 "
"channel）并且它的决定会被复制给 followers。Raft 排序服务应该比基于 Kafka "
"的排序服务更简单的设置并管理，并且他们的设计允许分布世界各地的组织来为一个去中心化的排序服务贡献节点。"

#: ../../source/whatsnew.rst:125
msgid ""
":doc:`orderer/ordering_service`: Describes the role of an ordering service "
"in Fabric and an overview of the three ordering service implementations "
"currently available: Solo, Kafka, and Raft."
msgstr ""
":doc:`orderer/ordering_service`：描述了在 Fabric "
"中的一个排序服务的角色，以及对现在可用的三种排序服务的实现的概览：Solo、Kafka 和 Raft。"

#: ../../source/whatsnew.rst:130
msgid ""
":doc:`raft_configuration`: Shows the configuration parameters and "
"considerations when deploying a Raft ordering service."
msgstr ":doc:`raft_configuration`：显示了在部署一个 Raft 排序服务时候的配置参数以及考量点。"

#: ../../source/whatsnew.rst:134
msgid ""
":doc:`orderer_deploy`: Describes the process for deploying an ordering node,"
" independent of what the ordering service implementation will be."
msgstr ":doc:`orderer_deploy`：描述了部署一个排序节点的过程，不依赖于使用哪种排序服务的实现。"

#: ../../source/whatsnew.rst:138
msgid ""
":doc:`build_network`: Has been updated to allow you to use a Raft ordering "
"service with a sample network."
msgstr ":doc:`build_network`：已经被更新为允许你使在一个例子网络中用一个 Raft 排序服务。"

#: ../../source/whatsnew.rst:143
msgid "Release notes"
msgstr "Release notes"

#: ../../source/whatsnew.rst:145
msgid ""
"The release notes provide more details for users moving to the new release, "
"along with a link to the full release change log."
msgstr ""
"Release notes 提供了转换到新的 release 的更详细的信息，也包括了一个关于全部 release change log 的链接。"

#: ../../source/whatsnew.rst:148
msgid ""
"`Fabric v2.0.0-alpha release notes "
"<https://github.com/hyperledger/fabric/releases/tag/v2.0.0-alpha>`_."
msgstr ""
"`Fabric v2.0.0-alpha release notes "
"<https://github.com/hyperledger/fabric/releases/tag/v2.0.0-alpha>`_。"

#: ../../source/whatsnew.rst:149
msgid ""
"`Fabric CA v2.0.0-alpha release notes <https://github.com/hyperledger"
"/fabric-ca/releases/tag/v2.0.0-alpha>`_."
msgstr ""
"`Fabric CA v2.0.0-alpha release notes <https://github.com/hyperledger"
"/fabric-ca/releases/tag/v2.0.0-alpha>`_。"
