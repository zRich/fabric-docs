# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Su Zhenbing <su.zhen.bing@gmail.com>, 2019
# JulienGuo郭立冬 <690748277@qq.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-01 12:09+0800\n"
"PO-Revision-Date: 2019-04-22 20:01+0000\n"
"Last-Translator: JulienGuo郭立冬 <690748277@qq.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/hyperledger/teams/97220/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/dev-setup/devenv.rst:2
msgid "Setting up the development environment"
msgstr "设置开发环境"

#: ../../source/dev-setup/devenv.rst:5
msgid "Prerequisites"
msgstr "准备工作"

#: ../../source/dev-setup/devenv.rst:7
msgid "`Git client <https://git-scm.com/downloads>`__"
msgstr "`Git客户端 <https://git-scm.com/downloads>`__"

#: ../../source/dev-setup/devenv.rst:8
msgid "`Go <https://golang.org/dl/>`__ - version 1.12.x"
msgstr "`Go <https://golang.org/dl/>`__ - version 1.12.x"

#: ../../source/dev-setup/devenv.rst:9
msgid ""
"(macOS) `Xcode <https://itunes.apple.com/us/app/xcode/id497799835?mt=12>`__ "
"must be installed"
msgstr ""
"(macOS) `Xcode <https://itunes.apple.com/us/app/xcode/id497799835?mt=12>`__ "
"必须安装"

#: ../../source/dev-setup/devenv.rst:12
msgid "`Docker <https://www.docker.com/get-docker>`__ - 17.06.2-ce or later"
msgstr "`Docker <https://www.docker.com/get-docker>`__ - 17.06.2-ce或者更高版本"

#: ../../source/dev-setup/devenv.rst:13
msgid ""
"`Docker Compose <https://docs.docker.com/compose/>`__ - 1.14.0 or later"
msgstr "`Docker Compose <https://docs.docker.com/compose/>`__ - 1.14.0或者更高版本"

#: ../../source/dev-setup/devenv.rst:14
msgid ""
"(macOS) you may need to install gnutar, as macOS comes with bsdtar as the "
"default, but the build uses some gnutar flags. You can use Homebrew to "
"install it as follows:"
msgstr ""
"(macOS)你必须先安装gnutar，因为macOS系统默认使用自带的bsdtar，但是1.4使用了一些gnutar的参数。你可以通过Homebrew来安装gnutar："

#: ../../source/dev-setup/devenv.rst:22
msgid ""
"(macOS) If you install gnutar, you should prepend the \"gnubin\" directory "
"to the $PATH environment variable with something like:"
msgstr "(macOS) 如果你安装gnutar，你应该先把 \"gnubin\" 的目录放在环境变量 $PATH 里面，这样操作："

#: ../../source/dev-setup/devenv.rst:29
msgid ""
"(macOS) `Libtool <https://www.gnu.org/software/libtool/>`__. You can use "
"Homebrew to install it as follows:"
msgstr ""
"(macOS) `Libtool "
"<https://www.gnu.org/software/libtool/>`__。你可以使用Homebrew，参考下面的命令来安装："

#: ../../source/dev-setup/devenv.rst:36
msgid ""
"(only if using Vagrant) - `Vagrant <https://www.vagrantup.com/>`__ - 1.9 or "
"later"
msgstr ""
"(仅在使用Vagrant的时候需要) - `Vagrant <https://www.vagrantup.com/>`__ - 1.9或者更高版本"

#: ../../source/dev-setup/devenv.rst:38
msgid ""
"(only if using Vagrant) - `VirtualBox <https://www.virtualbox.org/>`__ - 5.0"
" or later"
msgstr ""
"(仅在使用Vagrant的时候需要) - `VirtualBox <https://www.virtualbox.org/>`__ - "
"5.0或者更高版本"

#: ../../source/dev-setup/devenv.rst:40
msgid "BIOS Enabled Virtualization - Varies based on hardware"
msgstr "BIOS开启虚拟化功能 - 根据硬件变化"

#: ../../source/dev-setup/devenv.rst:42
msgid ""
"Note: The BIOS Enabled Virtualization may be within the CPU or Security "
"settings of the BIOS"
msgstr "提示：BIOS开启虚拟化应该是指在CPU内或者BIOS的安全设置。"

#: ../../source/dev-setup/devenv.rst:47
msgid "Steps"
msgstr "步骤"

#: ../../source/dev-setup/devenv.rst:50
msgid "Set your GOPATH"
msgstr "设置GOPATH"

#: ../../source/dev-setup/devenv.rst:52
msgid ""
"Make sure you have properly setup your Host's `GOPATH environment variable "
"<https://github.com/golang/go/wiki/GOPATH>`__. This allows for both building"
" within the Host and the VM."
msgstr ""
"确保你正确地设置了主机的 `GOPATH 环境变量 <https://github.com/golang/go/wiki/GOPATH>`__ "
"。只有设置了环境变量才能在你的主机或者虚拟机中编译构建。"

#: ../../source/dev-setup/devenv.rst:56
msgid ""
"In case you installed Go into a different location from the standard one "
"your Go distribution assumes, make sure that you also set `GOROOT "
"environment variable <https://golang.org/doc/install#install>`__."
msgstr ""
"如果你安装的Go不在默认位置，确保你设置了 "
"`GOROOT环境变量<https://golang.org/doc/install#install>`__。"

#: ../../source/dev-setup/devenv.rst:61
msgid "Note to Windows users"
msgstr "Windows用户请注意"

#: ../../source/dev-setup/devenv.rst:63
msgid ""
"If you are running Windows, before running any ``git clone`` commands, run "
"the following command."
msgstr "如果你用的是Windows系统，在运行 ``git clone`` 命令之前，请先运行下列命令。"

#: ../../source/dev-setup/devenv.rst:70
msgid ""
"If ``core.autocrlf`` is set to ``true``, you must set it to ``false`` by "
"running"
msgstr "如果 ``core.autocrlf``当前值是 ``true``，你必须把它设置为 ``false`` 。"

#: ../../source/dev-setup/devenv.rst:77
msgid ""
"If you continue with ``core.autocrlf`` set to ``true``, the ``vagrant up`` "
"command will fail with the error:"
msgstr "如果你保持 ``core.autocrlf`` 的值为 ``true``，后续执行的 ``vagrant up`` 命令会报如下错误："

#: ../../source/dev-setup/devenv.rst:80
msgid ""
"``./setup.sh: /bin/bash^M: bad interpreter: No such file or directory``"
msgstr ""
"``./setup.sh: /bin/bash^M: bad interpreter: No such file or directory``"

#: ../../source/dev-setup/devenv.rst:83
msgid "Cloning the Hyperledger Fabric source"
msgstr "克隆Hyperledger Fabric项目源代码"

#: ../../source/dev-setup/devenv.rst:85
msgid ""
"Since Hyperledger Fabric is written in ``Go``, you'll need to clone the "
"source repository to your $GOPATH/src directory. If your $GOPATH has "
"multiple path components, then you will want to use the first one. There's a"
" little bit of setup needed:"
msgstr ""
"因为Hyperledger Fabric是用 ``Go`` 写的，所以你需要将它克隆到$GOPATH/src目录。 "
"如果你的$GOPATH有多个，那么请选择第一个$GOPATH。 这里有一些需要设置："

#: ../../source/dev-setup/devenv.rst:96
msgid ""
"Recall that we are using ``Gerrit`` for source control, which has its own "
"internal git repositories. Hence, we will need to clone from :doc:`Gerrit "
"<../Gerrit/gerrit>`. For brevity, the command is as follows:"
msgstr ""
"重申一下，我们使用 ``Gerrit`` 来做代码的控制， ``Gerrit`` 内部有自己的git仓库。因此我们需要从 :doc:`Gerrit "
"<../Gerrit/gerrit>` 来克隆。"

#: ../../source/dev-setup/devenv.rst:105
msgid ""
"**Note:** Of course, you would want to replace ``LFID`` with your own "
":doc:`Linux Foundation ID <../Gerrit/lf-account>`."
msgstr ""
"**注意:** 当然，你要将 ``LFID`` 替换为你自己的 :doc:`Linux Foundation ID <../Gerrit/lf-"
"account>`。"
