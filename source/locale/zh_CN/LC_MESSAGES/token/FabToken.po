# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# JulienGuo郭立冬 <690748277@qq.com>, 2019
# 王伟兵 <wbwang@inspur.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-01 12:09+0800\n"
"PO-Revision-Date: 2019-04-22 19:59+0000\n"
"Last-Translator: 王伟兵 <wbwang@inspur.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/hyperledger/teams/97220/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/token/FabToken.md:1
msgid "Using FabToken"
msgstr "使用FabToken"

#: ../../source/token/FabToken.md:3
msgid ""
"FabToken allows users to easily tokenize assets on Hyperledger Fabric. "
"Tokens are being introduced as an Alpha feature in Fabric v2.0. You can use "
"the following operations guide to learn about FabToken and get started with "
"tokens. You can find an example creating tokens on Fabric that extends the "
"Building your First Network tutorial at the end of this guide."
msgstr ""
"FabToken允许用户轻松标记Hyperledger Fabric上的资产。Token作为Fabric "
"v2.0中的Alpha版本特性引入。您可以使用以下操作指南了解FabToken并开始使用token。您可以在本指南的末尾找到一个在Fabric上创建token的示例，该示例扩展了BYFN教程。"

#: ../../source/token/FabToken.md:9 ../../source/token/FabToken.md:15
msgid "What is FabToken"
msgstr "什么是FabToken "

#: ../../source/token/FabToken.md:10
msgid "The Token lifecycle"
msgstr "token生命周期"

#: ../../source/token/FabToken.md:11
msgid "The Token transaction flow"
msgstr "token交易流程"

#: ../../source/token/FabToken.md:12
msgid "FabToken example"
msgstr "FabToken示例"

#: ../../source/token/FabToken.md:13 ../../source/token/FabToken.md:517
msgid "Future features"
msgstr "未来功能"

#: ../../source/token/FabToken.md:17
msgid ""
"Representing assets as tokens allows you to use the blockchain ledger to "
"establish the unique state and ownership of an item, and transfer ownership "
"using a consensus mechanism that is trusted by multiple parties. As long as "
"the ledger is secure, the asset is immutable and cannot be transferred "
"without the owners consent."
msgstr ""
"将资产表示为Token允许您使用区块链账本来建立项目的惟一状态和所有权，并使用多方信任的共识机制来转移所有权。只要账本是安全的，资产就是不可变的，未经所有者同意不能转让。"

#: ../../source/token/FabToken.md:23
msgid ""
"Tokens can represent tangible assets, such as goods moving through a supply "
"chain or a financial instrument being traded. Tokens can also represent "
"intangible assets such as loyalty points. Because tokens cannot be "
"transferred without the consent of the owner, and transactions are validated"
" on a distributed ledger, representing assets as tokens allows you to reduce"
" the risk and difficulty of transferring assets across multiple parties."
msgstr ""
"Token可以代表有形资产，比如流经供应链的货物或正在交易的金融工具。代币也可以代表无形资产，如忠诚度点数。因为没有所有者的同意不能转让token，而且交易是在分布式账本上验证的，所以将资产表示为token可以降低跨多方转让资产的风险和难度。"

#: ../../source/token/FabToken.md:30
msgid ""
"FabToken is a token management system that allows you to issue, transfer, "
"and redeem tokens using Hyperledger Fabric. Tokens are stored on channel "
"ledgers and can be owned by any member of the channel. FabToken uses the "
"membership services of Fabric to authenticate the identity of token owners "
"and manage their public and private keys. Fabric token transactions are only"
" valid if they are issued by a token owner with a valid MSP identifier."
msgstr ""
"FabToken是一个token管理系统，允许您使用Hyperledger "
"Fabric发出、转账和赎回token。Token存储在channel账本上，可以由channel的任何成员拥有。FabToken使用Fabric的成员服务来验证token所有者的身份，并管理其公钥和私钥。Fabric"
" token交易只有由具有有效MSP标识符的token所有者发出时才有效。"

#: ../../source/token/FabToken.md:37
msgid ""
"FabToken provides a simple interface for tokenizing assets on Fabric "
"channels, while taking advantage of the validation and trust that channels "
"provide. Tokens use the channel ordering services and peers for consensus "
"and validation. Tokens also use channel policies to govern which members are"
" allowed to own and issue tokens. However, users do not need to use smart "
"contracts to create or manage tokens. Tokens can establish immutability and "
"ownership of an asset without requiring that channel members write and "
"approve complicated business logic to create and govern those assets. Token "
"owners can use trusted peers to create token transactions, without having to"
" rely on peers belonging to other organizations to execute and endorse a "
"transaction."
msgstr ""
"FabToken提供了一个简单的接口来标记Fabric "
"channel上的资产，同时利用channel提供的验证和信任。Token使用channel排序节点和peer节点进行共识和验证。Token还使用channel策略来控制允许哪些成员拥有和发出Token。然而，用户不需要使用智能合约来创建或管理token。Token可以建立资产的不变性和所有权，而不需要channel成员编写和批准复杂的业务逻辑来创建和管理这些资产。Token所有者可以使用自己信任的节点来创建token交易，而不必依赖于属于其他组织的节点来执行或背书交易。"

#: ../../source/token/FabToken.md:48
msgid "The token lifecycle"
msgstr "token生命周期"

#: ../../source/token/FabToken.md:50
msgid ""
"Tokens have a closed lifecycle within Hyperledger Fabric. They can be "
"issued, transferred, and then redeemed."
msgstr "Token在Hyperledger Fabric内部有一个闭环的生命周期，可以发行、转让、赎回。"

#: ../../source/token/FabToken.md:53
msgid ""
"Tokens are created by being issued. The token issuer defines the type of "
"asset represented by the tokens and the quantity. The issuer also assigns "
"issued tokens to their original owners."
msgstr "token是通过发行来创建的。token发行方定义token表示的资产类型和数量。发行方还将已发行的token分配给其原始所有者。"

#: ../../source/token/FabToken.md:57
msgid ""
"Tokens are \"spent\" by being transferred. The token owner transfers the "
"asset represented by token to a new owner that is a member of the fabric "
"channel. Once the token has been transferred, it can no longer be spent or "
"accessed by the previous owner."
msgstr ""
"token是通过转账来“花费”的。token所有者将token表示的资产转账给作为fabric通道成员的某个新所有者。一旦token被转账，它就不能再被以前的所有者使用或访问。"

#: ../../source/token/FabToken.md:62
msgid ""
"Tokens are removed from the channel by being redeemed. Redeemed tokens are "
"no longer owned by any channel member and thus can no longer be spent."
msgstr "可以通过赎回，将token从通道中删除。赎回的token不再属于任何通道成员，因此不能再使用。"

#: ../../source/token/FabToken.md:65
msgid ""
"FabToken uses an Unspent Transaction Output (UTXO) model to validate token "
"transactions. UTXO transactions are a powerful guarantee that an asset is "
"unique, can only be transferred by its owner, and cannot be double spent. "
"Each transaction needs to have a specific set of outputs and inputs. The "
"output are new tokens created by the transaction. These are listed on the "
"ledger in an \"unspent\" state. The input needs to be unspent tokens created"
" as the output of another transaction. When a transaction is validated, the "
"spent tokens are destroyed by being removed from the state database of the "
"channel ledger."
msgstr ""
"FabToken使用一种未花费的交易输出(UTXO)模型来验证token交易。UTXO交易是一种强大的保证，可以保证资产是唯一的，只能由所有者转移，并且不能双花。每笔交易都需要一组特定的输出和输入。输出是交易创建的新token。这些在账本上以“未花费”状态列出。输入需要作为另一个交易的输出创建的未花费token。当交易被验证时，从通道账本的状态数据库中删除已使用的token，从而销毁已使用的token。"

#: ../../source/token/FabToken.md:74
msgid ""
"The token lifecycle builds on the UTXO model to ensure that tokens are "
"unique and can only be spent once. When a token is issued, it is created in "
"an unspent state belonging to the owner that was specified by the issuer. "
"The owner can then transfer or redeem the token. When the token is "
"transferred, the token owned by the creator is taken as input. The output of"
" the transaction are new tokens owned by the recipients of the transfer. The"
" input token becomes \"spent\" and is removed from the state database. The "
"quantity of assets represented by the tokens transferred need to be of the "
"same quantity as the output. Tokens that are redeemed are transferred to an "
"empty owner. This makes redeemed tokens impossible to transfer again by any "
"member of the channel."
msgstr ""
"Token生命周期构建在UTXO模型之上，以确保token是唯一的，并且只能使用一次。当发行token时，它将以发行方指定的属于所有者的未花费状态创建。然后，所有者可以转让或赎回token。在做token转账时，将创建转账交易者拥有的token作为输入。交易的输出是转账的接收方拥有的新token。输入token变为“已花费”，并从状态数据库中删除。所转移的token表示的资产数量需要与输出的数量相同。被赎回的token被转移到一个空的所有者。这使得赎回的token不可能由通道的任何成员再次转账。"

#: ../../source/token/FabToken.md:85
msgid ""
"The following guide describes how tokens are created and used in Fabric. The"
" instructions provide details on what steps and information are required to "
"work with FabToken whether you are using the Fabric token client, the API's "
"provided by the Fabric SDKs, or Token CLI. You can find a FabToken example "
"at the end of this guide."
msgstr ""
"下面的指南描述了如何在Fabric中创建和使用token。这些说明详细说明了在使用Fabric token client、Fabric "
"SDKs提供的API或token CLI时，使用FabToken需要哪些步骤和信息。您可以在本指南的末尾找到一个FabToken示例。"

#: ../../source/token/FabToken.md:91
msgid "Issuing tokens"
msgstr "发行token"

#: ../../source/token/FabToken.md:93
msgid ""
"Tokens can only be created by Issuers. Issuers are channel members that are "
"given permission to issue tokens by the IssuingPolicy. Users that meet the "
"policy can add tokens to the ledger using an issue transaction."
msgstr ""
"Token只能由发行者创建。发行者是通道成员，他们被发行策略授予发行token的权限。满足策略的用户可以使用发行交易将token添加到账本中。"

#: ../../source/token/FabToken.md:97
msgid "Tokens are created with three attributes:"
msgstr "Token有三个属性："

#: ../../source/token/FabToken.md:99
msgid ""
"Owner identifies the channel member that can transfer or redeem the new "
"token through its MSP identity."
msgstr "Owner属性标识了能够转账或赎回新token的通道成员（通过其MSP标识）。"

#: ../../source/token/FabToken.md:101
msgid ""
"Type describes the asset the token represents, such as USD, EUR, or "
"BYFNcoins in the example below."
msgstr "Type属性描述了token表示的资产，如下面示例中的美元、欧元或BYFNcoins。"

#: ../../source/token/FabToken.md:103
msgid "Quantity is the number of units of Type that the Token represents."
msgstr "Quantity属性是token表示的类型单位的数量。"

#: ../../source/token/FabToken.md:105
msgid ""
"For example, each token of type US dollar can represent 100 dollars. Each "
"dollar does not need to be a separate token. In order to spend 50 dollars of"
" the token, or add 50 dollars, new tokens are created which represent the "
"new quantities."
msgstr ""
"例如，美元类型的每个token可以表示100美元。每一美元不需要是一个单独的token。为了消费50美元的token，或者添加50美元，将创建表示新数量单位的新token。"

#: ../../source/token/FabToken.md:110
msgid ""
"The IssuingPolicy can also restrict which users can issue tokens of specific"
" types. Within the Fabric v2.0 Alpha release, IssuingPolicy is set to ANY, "
"meaning that all channel members will be allowed to issue tokens of any "
"type. Users will be allowed to restrict this policy in a future release."
msgstr ""
"发行策略还可以限制哪些用户可以发布特定类型的token。在Fabric v2.0 "
"Alpha版中，IssuingPolicy被设置为ANY，这意味着所有通道成员都可以发出任何类型的token。在将来的版本中，用户可以限制此策略。"

#: ../../source/token/FabToken.md:115
msgid "List"
msgstr "列表"

#: ../../source/token/FabToken.md:117
msgid ""
"You can use the List method or command to query the unspent tokens that you "
"own. A successful list command returns the following values:"
msgstr "您可以使用List方法或命令查询您拥有的未花费的token。一个成功执行的list命令返回以下值:"

#: ../../source/token/FabToken.md:120
msgid "TokenID is the identifier of each token you own."
msgstr "TokenID是您拥有的每个token的标识符。"

#: ../../source/token/FabToken.md:121
msgid "Type is the asset your tokens represent."
msgstr "Type是token表示的资产。"

#: ../../source/token/FabToken.md:122
msgid ""
"Quantity is number of units of Type in hexadecimal format of each asset that"
" you own."
msgstr "Quantity是您拥有的每个资产的十六进制格式的类型单位的数量。"

#: ../../source/token/FabToken.md:125
msgid "Transfer"
msgstr "转账"

#: ../../source/token/FabToken.md:127
msgid ""
"You can spend the tokens that you own by transferring them to other channel "
"members. You can transfer a token by providing the following values:"
msgstr "您可以通过将自己拥有的token转账给其他通道成员来花费它们。您可以通过提供以下值来进行token转账："

#: ../../source/token/FabToken.md:130
msgid "Token ID: The ID of the tokens you want to transfer."
msgstr "Token ID：要转账的token的ID。"

#: ../../source/token/FabToken.md:131
msgid ""
"Quantity: The amount of the asset represented by each token to be "
"transferred."
msgstr "Quantity：要转账的每个token表示的资产金额。"

#: ../../source/token/FabToken.md:133
msgid ""
"Recipient: The MSP identifier of the channel member you want to transfer the"
" assets to."
msgstr "Recipient：要将资产转账到的通道成员的MSP标识符。"

#: ../../source/token/FabToken.md:136
msgid ""
"Note that the transfer transaction is against the underlying asset that the "
"tokens represent, and does not transfer the tokens themselves. Rather, new "
"tokens are created by the transfer transaction. For example, if you own a "
"token that is worth 100 dollars, you can spend 50 dollars using that token. "
"The transfer transaction will create two new tokens as output. One token "
"worth 50 dollars will belong to you, and another token worth 50 dollars will"
" belong to the recipient."
msgstr ""
"注意，转账交易针对token所表示的基础资产，而不是交易token本身。相反，新的token是由转账交易创建的。例如，如果您拥有一个值100美元的token，您可以使用该token花费50美元。转账交易将创建两个新的token作为输出。一个代表50美元的token将属于您，另一个代表50美元的token将属于收款人。"

#: ../../source/token/FabToken.md:143
msgid ""
"The quantity of the assets being transferred to the recipients of the "
"transaction needs to be the same quantity as the input tokens. If you do not"
" want to transfer the entire quantity of the asset represented by the token,"
" you can transfer a portion of the asset and the transaction will "
"automatically make you the owner of the remaining balance. Using the example"
" above, if only spend 50 dollars of the 100 dollar token, the transfer "
"transaction will automatically create a new token worth 50 dollars with you "
"as the owner."
msgstr ""
"被转账到交易接收者的资产数量需要与输入token所代表的资产数量相同。如果您不想转出token所表示的资产的全部数量，您可以只转资产的一部分，并且交易将自动使您成为余额的所有者。使用上面的示例，如果只花费100美元token中的50美元，那么转账交易将自动创建一个价值50美元的新token，并将您作为所有者。"

#: ../../source/token/FabToken.md:151
msgid "To be successful, a transfer needs to meet the following conditions:"
msgstr "为取得成功，转账须符合下列条件："

#: ../../source/token/FabToken.md:153
msgid ""
"The tokens being transferred need to belong to the transaction initiator and"
" are unspent."
msgstr "正在转账的token需要属于交易发起人，并且未被花费。"

#: ../../source/token/FabToken.md:155
msgid "All input tokens of the transaction need to be of the same type."
msgstr "交易的所有输入token都需要具有相同的类型。"

#: ../../source/token/FabToken.md:157
msgid "Redeem"
msgstr "赎回"

#: ../../source/token/FabToken.md:159
msgid ""
"Redeemed tokens can no longer be spent. Redeeming a token removes an asset "
"from the business network being managed by the channel and guarantees that "
"it can no longer be transferred or changed. If an item in a supply chain "
"reaches its final destination, or a financial asset reaches its term, the "
"token representing the asset can be redeemed since the asset no longer needs"
" to be used by the members of the channel."
msgstr ""
"赎回的token不能再花费。赎回token的操作会从由通道管理的业务网络中删除资产，并确保不能再转账或更改该资产。如果供应链中的物品到达了最终目的地，或者金融资产到达了期限，则表示该资产的token可以被赎回，因为该资产不再需要由通道成员使用。"

#: ../../source/token/FabToken.md:166
msgid "An owner needs to provide the following arguments to redeem tokens:"
msgstr "所有者赎回token需要提供以下参数："

#: ../../source/token/FabToken.md:167
msgid "Token ID: The ID of the token you want to redeem."
msgstr "Token ID：要赎回的token的ID。"

#: ../../source/token/FabToken.md:168
msgid ""
"Quantity: The quantity of the asset represented by each token you want to "
"redeem."
msgstr "Quantity：要赎回的每个token表示的资产数量。"

#: ../../source/token/FabToken.md:171
msgid ""
"Tokens can only be redeemed if the token owner submits the redeem "
"transaction. It is not necessary to redeem the entire quantity of the asset "
"represented by the token. For example, if you have a token representing 100 "
"dollars, and want to redeem 50, the redeem transaction will create a new "
"token worth 50 dollars, and transfer another 50 to a restricted account "
"without an owner. Because the account has no owner, the 50 dollars can no "
"longer be transferred by any members of the channel."
msgstr ""
"只有token所有者提交赎回交易时才能赎回token。不需要赎回token所表示的全部资产数量。例如，如果您有一个表示100美元的token，并且想赎回50美元，那么赎回交易将创建一个值50美元的新token，并将另一个50美元转移到一个没有所有者的受限帐户。因为该账户没有所有者，50美元不能再被任何通道的成员转移。"

#: ../../source/token/FabToken.md:179
msgid "The token transaction flow"
msgstr "token交易流程"

#: ../../source/token/FabToken.md:181
msgid ""
"Fabtoken bypasses the standard Hyperledger Fabric endorsement flow. "
"Transactions against chaincode need to be invoked on the peers of enough "
"organizations to meet the chaincode endorsement policy. This ensures that "
"the result of the transaction is consistent with the logic of the smart "
"contract and that the result of that logic has been validated by multiple "
"organizations. Because tokens are unique representations of an asset that "
"can only be transferred or redeemed by their owner, there is no need for "
"multiple organizations to validate the initial transaction."
msgstr ""
"Fabtoken绕过了标准的Hyperledger "
"Fabric背书流程。针对链码的交易需要在足够多的组织的peer节点上执行，以满足链码背书策略。这将确保交易的结果与智能合约的逻辑保持一致，并且该逻辑的结果已被多个组织验证。由于token是资产的唯一表示形式，只能由其所有者转移或赎回，因此不需要多个组织验证初始交易。"

#: ../../source/token/FabToken.md:190
msgid ""
"The FabToken client used by the token CLI and the Fabric SDK for Node.js "
"leverages trusted peers, referred to as prover peers to create token "
"transactions. For example, a user belonging to an organization that operates"
" a peer could use that peer to query their tokens and spend them. Any peer "
"with the Fabric 2.0 Alpha code can be used as a prover peer if it is joined "
"to a channel with V2_0 capabilities enabled."
msgstr ""
"Token CLI和Node.js版的Fabric SDK都包含FabToken "
"client模块，模块可以利用可信节点，或称为校准节点，创建token交易。例如，属于操作节点的组织的用户可以使用该节点查询其token并使用它们。如果连接到启用了V2_0功能的通道，那么任何具有Fabric"
" 2.0 Alpha代码的节点都可以用作校准节点。"

#: ../../source/token/FabToken.md:197
msgid ""
"In the case of an issue transaction, the prover peer will verify that the "
"requested operation satisfies the IssuingPolicy associated with the tokens "
"being created."
msgstr "在发行交易的情况下，验证者节点将验证所请求的操作是否满足与正在创建的token相关联的发行策略。"

#: ../../source/token/FabToken.md:200
msgid ""
"In the case of transfer, redeem and list, the peer checks that the input "
"tokens are unspent and belong to the entity requesting the transaction."
msgstr "在转账、赎回和列表的情况下，节点检查输入token是否已花费，是否属于请求交易的实体。"

#: ../../source/token/FabToken.md:202
msgid ""
"In the case of transfer and redeem, the peer checks that the input and "
"output tokens are all of the same type and that the output tokens have the "
"same type and sum up to the same quantity as the input tokens."
msgstr ""
"在转账和赎回的情况下，节点检查输入和输出token是否都具有相同的类型，以及输出token是否具有相同的类型并与输入token的数量之和是否相同。"

#: ../../source/token/FabToken.md:206
msgid ""
"Once the client has generated the token transaction with the help of the "
"prover peer, it sends the transaction to the ordering service. The ordering "
"service then sends the transaction to committing peers to be validated and "
"added to the ledger. The committing peers check that the transaction "
"conforms to the UTXO transaction model, and that the underlying asset is not"
" being double spent or over spent."
msgstr ""
"一旦client在校准节点的帮助下生成了token交易，它就将交易发送给排序服务。然后，排序服务将交易发送给提交节点以进行验证并添加到账本中。提交节点检查交易是否符合UTXO交易模型，以及基础资产是否被双花或超额使用。"

#: ../../source/token/FabToken.md:213
msgid "FabToken Example"
msgstr "FabToken示例"

#: ../../source/token/FabToken.md:215
msgid ""
"You can try working with tokens yourself using the sample network inside the"
" Building your first network tutorial to issue and transfer tokens. In this "
"example, we will use the Token CLI to trade some tokenized BYFNcoins  on a "
"channel created by the ./byfn.sh script."
msgstr ""
"您可以尝试使用BYFN教程中的示例网络亲自处理token，比如发行和转账token。在本例中，我们将使用Token "
"CLI在./byfn.sh脚本创建的通道上交易一些token化的BYFNcoins。"

#: ../../source/token/FabToken.md:221
msgid ""
"You can also work with tokens using the Fabric SDK for Node.js. Visit the "
"How to perform token operations tutorial in the Node.js Fabric SDK "
"documentation. You can also find a sample that uses the Node.js Fabric SDK "
"to issue, transfer, and redeem tokens in the Fabric Samples repository."
msgstr ""
"您还可以使用Node.js版的Fabric SDK来处理token。访问Node.js版Fabric "
"SDK文档中的“如何执行token操作”教程。您还可以找到一个示例，它使用Node.js版Fabric SDK，在fabric-"
"samples中发行、转账和赎回token。"

#: ../../source/token/FabToken.md:226
msgid "Start the network"
msgstr "启动网络"

#: ../../source/token/FabToken.md:228
msgid ""
"The first step is to bring up the sample network. The ./byfn.sh script "
"creates a Fabric network with two organizations, Org1 and Org2, with peers "
"joined to a channel called mychannel. We are going to use mychannel to issue"
" tokens and transfer them between Org1 and Org2."
msgstr ""
"第一步是打开示例网络。./byfn.sh脚本创建了一个由两个组织Org1和Org2组成的Fabric网络，其中的节点连接到一个名为mychannel的通道。我们将使用mychannel发行token，并在Org1和Org2之间转移它们。"

#: ../../source/token/FabToken.md:233
msgid ""
"First we need to clean up our environment. The following command will "
"navigate to the fabric-samples directory, kill any active or stale Docker "
"containers, and remove previously generated artifacts:"
msgstr ""
"首先，我们需要清理我们的环境。下面的命令将导航到fabric-samples目录，杀死所有活动的或陈旧的Docker容器，并删除以前生成的内容："

#: ../../source/token/FabToken.md:241
msgid ""
"You first need to generate the artifacts required by the sample network. Run"
" the following command:"
msgstr "首先需要生成示例网络所需的构件。运行以下命令："

#: ../../source/token/FabToken.md:247
msgid ""
"We need to add some files that we will need in future steps. Navigate to the"
" crypto-config directory inside the first-network directory."
msgstr "我们需要添加一些在后面步骤中需要的文件。导航到first-network目录中的crypto-config目录。"

#: ../../source/token/FabToken.md:252
msgid ""
"The Token CLI uses configuration files from each organization with "
"information about which peers the organization trusts, and which ordering "
"service to send the transactions. Below is the configuration file for Org1. "
"Notice that Org1 uses its own peer as a prover peer, and provides the peer "
"endpoint information in the \"ProverPeer\" section of the file."
msgstr ""
"Token "
"CLI使用的来自每个组织的配置文件，包含关于组织信任哪些节点以及往哪个排序节点发送交易的信息。下面是Org1的配置文件。请注意，Org1使用它自己的节点作为校准节点，并在文件的“ProverPeer”部分中提供节点端点信息。"

#: ../../source/token/FabToken.md:295
msgid ""
"Paste the file above in a text editor and save it as configorg1.json. Once "
"you have saved configorg1.json, create a new file in your text editor, and "
"paste the JSON file below. Save the file as configorg2.json in the same "
"location:"
msgstr ""
"将上面的文件粘贴到文本编辑器中，并将其保存为configorg1.json。保存configorg1之后，在文本编辑器中创建一个新文件，并粘贴下面的json文件。在相同位置将文件保存为configorg2.json："

#: ../../source/token/FabToken.md:337
msgid ""
"We now need to save one additional file that we will use when we transfer "
"our tokens. Create a new file in your text editor, and save the file below "
"as shares.json:"
msgstr "现在我们需要保存一个额外的文件，以便在转移token时使用。在文本编辑器中创建一个新文件，并将下面的文件保存为share.json："

#: ../../source/token/FabToken.md:355
msgid ""
"You are now ready to navigate back to the fabric-samples directory and bring"
" up the sample network:"
msgstr "现在，您可以导航回fabric-samples目录并启动sample网络："

#: ../../source/token/FabToken.md:362
msgid ""
"The command will create the organizations, peers, ordering service, and "
"channel we will use to issue and transfer the tokens. When the command "
"completes successfully, you should see the following result:"
msgstr "该命令将创建用于发行和转账token的orgs、peers、orderers和channel。当命令成功完成时，您应该会看到以下结果："

#: ../../source/token/FabToken.md:377
msgid "Issue tokens"
msgstr "发行token"

#: ../../source/token/FabToken.md:379
msgid ""
"We are going to tokenize 100 BYFNcoins, which can only be issued and traded "
"by our trusted friends on our sample network. Navigate into the CLI "
"container using the following command:"
msgstr "我们将标记100个BYFNcoins，这只能由我们信任的朋友在我们的示例网络上发行和交易。使用以下命令导航到CLI容器："

#: ../../source/token/FabToken.md:387
msgid ""
"Use the command below to issue a token worth 100 BYFNcoins as the Org1 "
"admin. The command uses the configorg1.json to find the endpoint of org1's "
"prover peer, which it will use to assemble the transaction. Note that the "
"Org1 administrator submits the transaction, but the User1 of Org1 will be "
"the token owner."
msgstr ""
"使用下面的命令作为Org1管理员发出一个值100 "
"BYFNcoins的token。该命令使用configorg1.json查找org1的校准节点的端口地址，它将使用该端口地址组装交易。注意，Org1管理员提交交易，但是Org1的User1将是token所有者。"

#: ../../source/token/FabToken.md:399 ../../source/token/FabToken.md:416
msgid ""
"A successful command will generate a response similar to the following:"
msgstr "一个成功的命令会产生一个类似如下的响应："

#: ../../source/token/FabToken.md:407
msgid ""
"You can use the list command to view the token that was created. This "
"command is issued by User1, which is the owner of new token."
msgstr "您可以使用list命令查看创建的token。此命令由User1发出，它是新token的所有者。"

#: ../../source/token/FabToken.md:422
msgid ""
"In the command output, you can find the tokenID, the token type, and the "
"quantity. The tokenID is the transactionID of the transaction that created "
"the token."
msgstr "在命令输出中，您可以找到tokenID、类型和数量。tokenID是创建token的交易的transactionID。"

#: ../../source/token/FabToken.md:426
msgid "Transferring tokens"
msgstr "转账token"

#: ../../source/token/FabToken.md:428
msgid ""
"Now that the tokens have been created, User1 of Org1 can now spend the token"
" by transferring BYFNcoins to another user. User1 of Org1 will give User1 of"
" Org2 50 BYFNcoins, while keeping 50 for himself."
msgstr ""
"既然已经创建了token，那么Org1的User1现在可以通过将BYFNcoins转账给另一个用户来使用token。Org1的User1将给Org2的User1"
" 50 BYFNcoins，同时自己保留50。"

#: ../../source/token/FabToken.md:432
msgid ""
"Use the command below to initiate the transfer. Use the tokenIDs flag to "
"transfer the tokenID returned by the list flag. Notice how the -- Shares "
"flag passes the Token CLI a JSON file that allocates 50 BYFNcoins to User1 "
"in Org2. This is the file that you created in the crypto-config folder "
"before you started the network. Because the input token represents 100 "
"BYFNcoins, the transfer transaction will automatically create a new token "
"belonging to User1 of Org1 that represents the 50 BYFNcoins that were not "
"transferred to Org2."
msgstr ""
"使用下面的命令启动转账。使用 tokenIDs 来标记转账列表中返回的tokenID。注意 -- Shares "
"标记如何把一个JSON文件传递给Token CLI，该文件在Org2中将50 BYFNcoins分配给User1。这是您在启动网络之前在 crypto-"
"config文件夹中创建的文件。因为输入token表示100个BYFNcoins，所以转账交易将自动创建一个属于Org1的User1的新token，它表示没有转账给Org2的50个BYFNcoins。"

#: ../../source/token/FabToken.md:446
msgid ""
"Once you have submitted the command above, you can run the list command "
"again to verify that User1 of Org1 now only has 50 BYFNcoins:"
msgstr "一旦你提交了上面的命令，你可以再次运行list命令来验证Org1的User1现在只有50 BYFNcoins："

#: ../../source/token/FabToken.md:453
msgid ""
"Note that the BYFNcoins have a different tokenID than the previous coins. "
"The transfer destroyed the previous token and created a new token worth 50 "
"BYFNcoins."
msgstr ""
"注意，现在的BYFNcoins与之前的有不同的tokenID。这次转账销毁了之前的token，并创建了一个价值50 BYFNcoins的新token。"

#: ../../source/token/FabToken.md:460
msgid ""
"You can run the command below to verify that User1 of Org2 received the 50 "
"BYFNcoins:"
msgstr "您可以运行下面的命令来验证Org2的User1收到了50 BYFNcoins："

#: ../../source/token/FabToken.md:469
msgid ""
"The tokenID of the coins owned by Org2 uses the same transaction ID as the "
"coins owned by Org1 since it was created by the same transaction. However, "
"because it was the second output of the transaction, it is also given an "
"index to distinguish it from the token owned by Org1."
msgstr ""
"Org2拥有的币的tokenID使用与Org1拥有的币相同的交易ID，因为它是由相同的交易创建的。但是，因为它是交易的第二个输出，所以还会给它一个索引，以区别于Org1拥有的token。"

#: ../../source/token/FabToken.md:479
msgid "Redeeming tokens"
msgstr "赎回token"

#: ../../source/token/FabToken.md:481
msgid ""
"Tokens can only be redeemed by their owners. Once an asset represented by a "
"token is redeemed, the token can no longer be transferred to any other "
"owners."
msgstr "Tokens只能由其所有者赎回。一旦用token表示的资产被赎回，该token就不能再转移给任何其他所有者。"

#: ../../source/token/FabToken.md:484
msgid "Use the command below to redeem 25 BYFNcoins belonging to Org2."
msgstr "使用下面的命令赎回属于Org2的25个BYFNcoins。"

#: ../../source/token/FabToken.md:492
msgid ""
"Org2 now only has one token worth 25 BYFNcoins. Use the list command to "
"verify the number of BYFNcoins owned by User1 of Org2."
msgstr "Org2现在只有一个值25 BYFNcoins的token。使用list命令验证Org2的User1拥有的BYFNcoins的数量。"

#: ../../source/token/FabToken.md:501
msgid "Note that the new TokenID created as output of the redeem transaction."
msgstr "关注作为赎回交易的输出创建的新TokenID。"

#: ../../source/token/FabToken.md:503
msgid ""
"Let's try to redeem tokens that belong to another user. Use the command "
"below to attempt as Org2 to redeem the token worth 50 BYFNcoins that belongs"
" to Org1:"
msgstr "让我们尝试赎回属于其他用户的tokens。使用下面的命令尝试作为Org2赎回属于Org1的面值为50 BYFNcoins的token："

#: ../../source/token/FabToken.md:512
msgid "The result will be the following error:"
msgstr "结果将出现以下错误："

#: ../../source/token/FabToken.md:519
msgid ""
"The FabToken Alpha only supports limited issuing and trading functionality. "
"Future releases will provide users a greater ability to integrate tokens "
"into business logic by supporting non-fungible tokens and chaincode "
"interoperability,"
msgstr ""
"FabToken "
"Alpha版只支持有限的发行和交易功能。以后的版本将通过支持不可替代的tokens和链码互操作功能，为用户提供更大的能力来将token集成到业务逻辑中，"

#: ../../source/token/FabToken.md:524
msgid ""
"Non fungible tokens cannot be merged or divided. Once they are created, they"
" can only be transferred to a new owner or redeemed. You can use non-"
"fungible tokens to represent unique assets such a concert ticket that is "
"mapped to a particular seat."
msgstr ""
"不可替换的tokens不能合并或分割。一旦它们被创建，它们只能被转账到一个新的所有者或赎回。您可以使用不可替换的token来表示惟一的资产，比如映射到特定座位的音乐会门票。"

#: ../../source/token/FabToken.md:529
msgid ""
"Chaincode interoperability allows tokens to be issued, transferred, and "
"redeemed by chaincode. This would allow the channel to issue and define "
"tokens using business logic agreed to by members of the channel. For "
"example, you can use chaincode to set the attributes of a chaincode, and "
"associate certain attributes with different transactions."
msgstr ""
"链码互操作功能允许使用链码发行、转账和赎回tokens。这将允许通道使用通道成员同意的业务逻辑发行和定义token。例如，您可以使用链码设置链码的属性，并将某些属性与不同的交易关联起来。"
