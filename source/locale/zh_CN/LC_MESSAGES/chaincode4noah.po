# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 王伟兵 <wbwang@inspur.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-01 12:09+0800\n"
"PO-Revision-Date: 2019-04-22 19:58+0000\n"
"Last-Translator: 王伟兵 <wbwang@inspur.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/hyperledger/teams/97220/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/chaincode4noah.md:1
msgid "Chaincode for Operators"
msgstr ""

#: ../../source/chaincode4noah.md:3
msgid "What is Chaincode?"
msgstr ""

#: ../../source/chaincode4noah.md:5
msgid ""
"Chaincode is a program, written in Go, Node.js, or Java that implements a "
"prescribed interface. Chaincode runs in a secured Docker container isolated "
"from the endorsing peer process. Chaincode initializes and manages ledger "
"state through transactions submitted by applications."
msgstr ""
"链码是一个程序，用Go、Node.js或Java编写，实现指定的接口。链码运行在安全的Docker容器中，该容器与背书节点进程隔离。链码通过应用程序提交的交易初始化和管理账本状态。"

#: ../../source/chaincode4noah.md:11
msgid ""
"A chaincode typically handles business logic agreed to by members of the "
"network, so it may be considered as a \"smart contract\". Ledger updates "
"created by a chaincode are scoped exclusively to that chaincode and can't be"
" accessed directly by another chaincode. However, within the same network, "
"given the appropriate permission a chaincode may invoke another chaincode to"
" access its state."
msgstr ""
"链码通常处理网络成员认同的业务逻辑，因此它可以被视为“智能合约”。由链码创建的账本更新只适用于该链码，不能被其他链码直接访问。但是，在相同的网络中，给定适当的权限，一个链码可以调用另一个链码来访问它的状态。"

#: ../../source/chaincode4noah.md:18
msgid ""
"In the following sections, we will explore chaincode through the eyes of a "
"blockchain network operator rather than an application developer. Chaincode "
"operators can use this tutorial to learn how to use the Fabric chainode "
"lifecycle to deploy and manage chaincode on their network."
msgstr ""
"在接下来的部分中，我们将通过区块链网络操作者而不是应用程序开发者的视角来研究链码。链码操作者可以使用本教程学习如何使用Fabric链码生命周期在其网络上部署和管理链码。"

#: ../../source/chaincode4noah.md:23
msgid "Chaincode lifecycle"
msgstr ""

#: ../../source/chaincode4noah.md:25
msgid ""
"The Fabric chaincode lifecycle is a process that allows multiple "
"organizations to agree on how a chaincode will be operated before it can be "
"used on a channel. The tutorial will discuss how a chaincode operator would "
"use the Fabric lifecycle to perform the following tasks:"
msgstr ""
"Fabric "
"链码生命周期是一个允许多个组织在链码在通道上使用之前，就如何操作达成一致意见的程序。本教程将讨论链码操作员如何使用Fabric生命周期来执行以下任务："

#: ../../source/chaincode4noah.md:30 ../../source/chaincode4noah.md:46
msgid "Install and define a chaincode"
msgstr ""

#: ../../source/chaincode4noah.md:31 ../../source/chaincode4noah.md:208
msgid "Upgrade a chaincode"
msgstr ""

#: ../../source/chaincode4noah.md:32 ../../source/chaincode4noah.md:245
msgid "Migrate to the new Fabric lifecycle"
msgstr ""

#: ../../source/chaincode4noah.md:34
msgid ""
"Note: The new Fabric chaincode lifecycle in the v2.0 Alpha release is not "
"yet feature complete. Specifically, be aware of the following limitations in"
" the Alpha release:"
msgstr "注意:在v2.0 Alpha版本中，新的Fabric链码生命周期还没有完成。具体来说，要注意Alpha发行版中的以下限制:"

#: ../../source/chaincode4noah.md:38
msgid "Service Discovery is not yet supported"
msgstr ""

#: ../../source/chaincode4noah.md:39
msgid ""
"Chaincodes defined with the new lifecycle are not yet discoverable via "
"service discovery"
msgstr ""

#: ../../source/chaincode4noah.md:42
msgid ""
"These limitations will be resolved after the Alpha release. To use the old "
"lifecycle model to install and instantiate a chaincode, visit the v1.4 "
"version of the Chaincode for Operators tutorial."
msgstr "这些限制将在Alpha发行版之后得到解决。要使用旧的生命周期模型来安装和实例化链码，请访问链码的操作员教程的v1.4版本。"

#: ../../source/chaincode4noah.md:48
msgid ""
"Fabric chaincode lifecycle requires that organizations agree to the "
"parameters that define a chaincode, such as name, version, and the chaincode"
" endorsement policy. Channel members come to agreement using the following "
"four steps. Not every organization on a channel needs to complete each step."
msgstr ""
"Fabric链码生命周期要求组织同意定义链码的参数，例如名称、版本和链码背书策略。通道成员通过以下四个步骤达成协议。并不是每个通道上的组织都需要完成每个步骤。"

#: ../../source/chaincode4noah.md:53
msgid ""
"Package the chaincode: This step can be completed by one organization or by "
"each organization."
msgstr ""

#: ../../source/chaincode4noah.md:55
msgid ""
"Install the chaincode on your peers: Every organization that will use the "
"chaincode to endorse a transaction or query the ledger needs to complete "
"this step."
msgstr ""

#: ../../source/chaincode4noah.md:58
msgid ""
"Approve a chaincode definition for your organization: Every organization "
"that will use the chaincode needs to complete this step. The chaincode "
"definition needs to be approved by a sufficient number of organizations to "
"satisfy the channel's LifecycleEndorsment policy (a majority, by default) "
"before the chaincode can be started on the channel."
msgstr ""

#: ../../source/chaincode4noah.md:63
msgid ""
"Commit the chaincode definition to the channel: The commit transaction needs"
" to be submitted by one organization once the required number of "
"organizations on the channel have approved. The submitter first collects "
"endorsements from enough peers of the organizations that have approved, and "
"then submits the transaction to commit the chaincode definition."
msgstr ""

#: ../../source/chaincode4noah.md:69
msgid ""
"This tutorial provides a detailed overview of the operations of the Fabric "
"chaincode lifecycle rather than the specific commands. To learn more about "
"how to use the Fabric lifecycle using the Peer CLI, see Install and define a"
" chaincode in the Building your First Network Tutorial or the peer lifecycle"
" command reference. To learn more about how to use the Fabric lifecycle "
"using the Fabric SDK for Node.js, visit How to install and start your "
"chaincode."
msgstr ""
"本教程提供了Fabric链码生命周期操作的详细概述，而不是具体的命令。要了解关于如何使用节点的CLI来使用Fabric生命周期的更多信息，请参见在构建您的第一个网络教程或节点的生命周期命令引用中安装和定义链码。要了解关于如何使用Fabric"
" SDK for Node.js使用Fabric生命周期的更多信息，请访问如何安装和启动链码。"

#: ../../source/chaincode4noah.md:76
msgid "Step One: Packaging the smart contract"
msgstr ""

#: ../../source/chaincode4noah.md:78
msgid ""
"Chaincode needs to be packaged in a tar file before it can be installed on "
"your peers. You can package a chaincode using the Fabric peer binaries, the "
"Node Fabric SDK, or a third party tool such as GNU tar. When you create a "
"chaincode package, you need to provide a chaincode package label to create a"
" succinct and human readable description of the package."
msgstr ""
" 链码需要打包在tar文件中，然后才能安装到您的节点上。您可以使用Fabric节点二进制文件、Node Fabric SDK或第三方工具(如GNU "
"tar)打包链码。当您创建一个链码包时，您需要提供一个链码包标签来创建一个简洁的、人类可读的包描述。"

#: ../../source/chaincode4noah.md:84
msgid ""
"If you use a third party tool to package the chaincode, the resulting file "
"needs to be in the format below. The Fabric peer binaries and the Fabric "
"SDKs will automatically create a file in this format."
msgstr "如果使用第三方工具来打包链码，则生成的文件需要采用以下格式。Fabric节点二进制文件和Fabric SDKs将自动创建这种格式的文件。"

#: ../../source/chaincode4noah.md:87
msgid ""
"The chaincode needs to be packaged in a tar file, ending with a .tar.gz file"
" extension."
msgstr ""

#: ../../source/chaincode4noah.md:89
msgid ""
"The tar file needs to contain two files (no directory): a metadata file "
"\"Chaincode-Package-Metadata.json\" and another tar containing the chaincode"
" files."
msgstr ""

#: ../../source/chaincode4noah.md:92
msgid ""
"\"Chaincode-Package-Metadata.json\" contains JSON that specifies the "
"chaincode language, code path, and package label. You can see an example of "
"a metadata file below:"
msgstr ""

#: ../../source/chaincode4noah.md:99
msgid "Step Two: Install the chaincode on your peers"
msgstr ""

#: ../../source/chaincode4noah.md:101
msgid ""
"You need to install the chaincode package on every peer that will execute "
"and endorse transactions. Whether using the CLI or an SDK, you need to "
"complete this step using your Peer Administrator, whose signing certificate "
"is in the admincerts folder of your peer MSP. It is recommended that "
"organizations only package a chaincode once, and then install the same "
"package on every peer that belongs to their org. If a channel wants to "
"ensure that each organization is running the same chaincode, one "
"organization can package a chaincode and send it to other channel members "
"out of band."
msgstr ""
"你需要在每一个执行和背书交易的节点上安装链码包。无论使用CLI还是SDK，都需要使用节点管理员完成此步骤，节点管理员的签名证书位于节点MSP的admincerts文件夹中。建议组织只打包一次链码，然后在属于其组织的每个节点上安装相同的包。如果一个通道想要确保每个组织运行相同的链码，那么一个组织可以打包一个链码并用带外方式将其发送到其他通道成员。"

#: ../../source/chaincode4noah.md:110
msgid ""
"A successful install command will return a chaincode package identifier, "
"which is the package label combined with a hash of the package. This package"
" identifier is used to associate a chaincode package installed on your peers"
" with a chaincode definition approved by your organization. Save the "
"identifier for next step. You can also find the package identifier by "
"querying the packages installed on your peer using the Peer CLI."
msgstr ""
"一个成功的安装命令将返回一个链码包标识符，它是一个包标签和包的散列组合。此包标识符用于将安装在节点上的链码包与组织批准的链码定义关联起来。为下一步保存标识符。您还可以通过使用节点CLI查询安装在您的节点上的包来找到包标识符。"

#: ../../source/chaincode4noah.md:117
msgid "Step Three: Approve a chaincode definition for your organization"
msgstr ""

#: ../../source/chaincode4noah.md:119
msgid ""
"The chaincode is governed by a chaincode definition. When channel members "
"approve a chaincode definition, the approval acts as a vote by an "
"organization on the chaincode parameters it accepts. These approved "
"organization definitions allow channel members to agree on a chaincode "
"before it can be used on a channel. The chaincode definition includes the "
"following parameters, which need to be consistent across organizations:"
msgstr ""
"链码由链码定义控制。当通道成员批准链码定义时，该批准作为组织对其接受的链码参数的表决。这些经过批准的组织定义允许通道成员在链码在通道上使用之前就链码达成一致。链码定义包括以下参数，这些参数需要跨组织保持一致:"

#: ../../source/chaincode4noah.md:126
msgid "Name: The name that applications will use when invoking the chaincode."
msgstr ""

#: ../../source/chaincode4noah.md:127
msgid ""
"Version: A version number or value associated with a given chaincodes "
"package. If you upgrade the chaincode binaries, you need to change your "
"chaincode version as well."
msgstr ""

#: ../../source/chaincode4noah.md:130
msgid ""
"Sequence: The number of times the chaincode has been defined. This value is "
"an integer, and is used to keep track of chaincode upgrades. For example, "
"when you first install and approve a chaincode definition, the sequence "
"number will be 1. When you next upgrade the chaincode, the sequence number "
"will be incremented to 2."
msgstr ""

#: ../../source/chaincode4noah.md:135
msgid ""
"Endorsement Policy: Which organizations need to execute and validate the "
"transaction output. The endorsement policy can be expressed as a string "
"passed to the CLI or the SDK, or it can reference a policy in the channel "
"config. By default, the endorsement policy is set to "
"Channel/Application/Endorsement, which defaults to require that a majority "
"of organizations in the channel endorse a transaction."
msgstr ""

#: ../../source/chaincode4noah.md:141
msgid ""
"Collection Configuration: The path to a private data collection definition "
"file associated with your chaincode. For more information about private data"
" collections, see the Private Data architecture reference."
msgstr ""

#: ../../source/chaincode4noah.md:144
msgid ""
"Initialization: All chaincode need to contain an Init function that is used "
"to initialize the chaincode. By default, this function is never executed. "
"However, you can use the chaincode definition to request that the Init "
"function be callable. If execution of Init is requested, fabric will ensure "
"that Init is invoked before any other function and is only invoked once."
msgstr ""

#: ../../source/chaincode4noah.md:149
msgid ""
"ESCC/VSCC Plugins: The name of a custom endorsement or validation plugin to "
"be used by this chaincode."
msgstr ""

#: ../../source/chaincode4noah.md:152
msgid ""
"The chaincode definition also includes the Package Identifier. This is a "
"required parameter for each organization that wants to use the chaincode. "
"The package ID does not need to be the same for all organizations. An "
"organization can approve a chaincode definition without installing a "
"chaincode package or including the identifier in the definition."
msgstr ""
"链码定义还包括包标识符。对于希望使用链码的每个组织，这都是必需的参数。包ID不需要对所有组织都是相同的。组织可以在不安装链码包或在定义中包含标识符的情况下批准链码定义。"

#: ../../source/chaincode4noah.md:158
msgid ""
"Each channel member that wants to use the chaincode needs to approve a "
"chaincode definition for their organization. This approval needs to be "
"submitted to the ordering service, after which it is distributed to all "
"peers. This approval needs to be submitted by your Organization "
"Administrator, whose signing certificate is listed as an admin cert in the "
"MSP of your organization definition. After the approval transaction has been"
" successfully submitted, the approved definition is stored in a collection "
"that is available to all the peers of your organization. As a result you "
"only need to approve a chaincode for your organization once, even if you "
"have multiple peers."
msgstr ""
"希望使用链码的每个通道成员都需要为其组织批准一个链码定义。此批准需要提交给排序服务，然后分发给所有节点。此批准需要由组织管理员提交，其签名证书在组织定义的MSP中作为管理证书列出。成功提交批准交易后，已批准的定义存储在一个集合中，该集合可用于组织的所有节点。因此，即使您有多个节点，也只需要为您的组织批准一次链码。"

#: ../../source/chaincode4noah.md:168
msgid "Step Four: Commit the chaincode definition to the channel"
msgstr ""

#: ../../source/chaincode4noah.md:170
msgid ""
"Once a sufficient number of channel members have approved a chaincode "
"definition, one organization can commit the definition to the channel. You "
"can use the queryapprovalstatus command to find which channel members have "
"approved a definition before committing it to the channel using the peer "
"CLI. The commit transaction proposal is first sent to the peers of channel "
"members, who query the chaincode definition approved for their organizations"
" and endorse the definition if their organization has approved it. The "
"transaction is then submitted to the ordering service, which then commits "
"the chaincode definition to the channel. The commit definition transaction "
"needs to be submitted as the Organization Administrator, whose signing "
"certificate is listed as an admin cert in the MSP of your organization "
"definition."
msgstr ""
"一旦有足够数量的通道成员批准了链码定义，一个组织就可以将该定义提交给通道。在使用节点的CLI将定义提交到通道之前，可以使用queryapprovalstatus命令查找哪些通道成员已经批准了该定义。提交交易提议首先发送给通道成员的节点，这些成员查询为其组织批准的链码定义，如果组织已经批准了该定义，则对其进行背书。然后将交易提交给排序服务，然后该服务将链码定义提交给通道。提交定义交易需要作为组织管理员提交，其签名证书在组织定义的MSP中作为管理证书列出。"

#: ../../source/chaincode4noah.md:182
msgid ""
"The number of organizations that need to approve a definition before it can "
"be successfully committed to the channel is governed by the "
"Channel/Application/LifecycleEndorsement policy. By default, this policy "
"requires that a majority of organizations in the channel endorse the "
"transaction. The LifecycleEndorsement policy is separate from the chaincode "
"endorsement policy. For example, even if a chaincode endorsement policy only"
" requires signatures from one or two organizations, a majority of channel "
"members still need to approve the chaincode definition according to the "
"default policy. When committing a channel definition, you need to target "
"enough peer organizations in the channel to satisfy your "
"LifecycleEndorsement policy."
msgstr ""
"在将定义成功提交给通道之前，需要批准该定义的组织数量由通道/应用程序/生命周期背书策略控制。默认情况下，该策略要求通道中的大多数组织认可该交易。生命周期背书策略与链码背书策略是分开的。例如，即使某链码背书策略只需要一个或两个组织的签名，大多数通道成员仍然需要根据默认策略批准链码定义。在提交通道定义时，您需要在通道中发送给足够多的节点组织，以满足您的生命周期背书策略。"

#: ../../source/chaincode4noah.md:193
msgid ""
"An organization can approve a chaincode definition without installing the "
"chaincode package. If an organization does not need to use the chaincode, "
"they can approve a chaincode definition without a package identifier to "
"ensure that the Lifecycle Endorsement policy is satisfied."
msgstr ""
"组织可以在不安装链码包的情况下批准链码定义。如果组织不需要使用链码，他们可以在没有包标识符的情况下批准链码定义，以确保满足生命周期背书策略。"

#: ../../source/chaincode4noah.md:198
msgid ""
"After the chaincode definition has been committed to the channel, channel "
"members can start using the chaincode. The first invoke of the chaincode "
"will start the chaincode containers on all of the peers targeted by the "
"transaction proposal, as long as those peers have installed the chaincode "
"package. You can use the chaincode definition to require the invocation of "
"the Init function to start the chaincode. Otherwise, a channel member can "
"start the chaincode container by invoking any transaction in the chaincode. "
"The first invoke, whether of an Init function or other transaction, is "
"subject to the chaincode endorsement policy. It may take a few minutes for "
"the chaincode container to start."
msgstr ""
"将链码定义提交给通道后，通道成员可以开始使用链码。链码的第一次调用将在交易提议发送给的所有节点上启动链码容器，只要这些节点已经安装了链码包。您可以使用链码定义来要求调用Init函数来启动链码。否则，通道成员可以通过调用链码中的任何交易来启动链码容器。无论是初始化函数还是其他交易的第一个调用，都受链码背书策略的约束。链码容器可能需要几分钟的时间才能启动。"

#: ../../source/chaincode4noah.md:210
msgid ""
"You can upgrade a chaincode using the same Fabric lifecycle process as you "
"used to install and start the chainocode. You can upgrade the chaincode "
"binaries, or only update the chaincode policies. Follow these steps to "
"upgrade a chaincode:"
msgstr "您可以使用与安装和启动链码相同的Fabric生命周期过程来升级链码。您可以升级链码二进制文件，或者只更新链码策略。按照以下步骤升级链码:"

#: ../../source/chaincode4noah.md:214
msgid ""
"Repackage the chaincode: You only need to complete this step if you are "
"upgrading the chaincode binaries."
msgstr ""

#: ../../source/chaincode4noah.md:216
msgid ""
"Install the new chaincode package on your peers: Once again, you only need "
"to complete this step if you are upgrading the chaincode binaries. "
"Installing the new chaincode package will generate a package ID, which you "
"will need to pass to the new chaincode definition. You also need to change "
"the chaincode version."
msgstr ""

#: ../../source/chaincode4noah.md:221
msgid ""
"Approve a new chaincode definition: If you are upgrading the chaincode "
"binaries, you need to update the chaincode version and the package ID in the"
" chaincode definition. You can also update your chaincode endorsement policy"
" without having to repackage your chaincode binaries. Channel members simply"
" need to approve a definition with the new policy. The new definition needs "
"to increment the sequence variable in the definition by one."
msgstr ""

#: ../../source/chaincode4noah.md:227
msgid ""
"Commit the definition to the channel: When a sufficient number of channel "
"members have approved the new chaincode definition, one organization can "
"commit the new definition to upgrade the chaincode definition to the "
"channel. There is no separate upgrade command as part of the lifecycle "
"process."
msgstr ""

#: ../../source/chaincode4noah.md:231
msgid ""
"Upgrade the chaincode container: If you updated the chaincode definition "
"without upgrading the chaincode package, you do not need to upgrade the "
"chaincode container. If you did upgrade the chaincode binaries, a new invoke"
" will upgrade the chaincode container. If you requested the execution of the"
" Init function in the chaincode definition, you need to upgrade the "
"chaincode container by invoking the Init function again after the new "
"definition is successfully committed."
msgstr ""

#: ../../source/chaincode4noah.md:239
msgid ""
"The Fabric chaincode lifecycle uses the sequence in the chaincode definition"
" to keep track of upgrades. All channel members need to increment the "
"sequence number by one and approve a new definition to upgrade the "
"chaincode. The version parameter is used to track the chaincode binaries, "
"and needs to be changed only when you upgrade the chaincode binaries."
msgstr ""
"Fabric链码生命周期使用链码定义中的序列来跟踪升级。所有通道成员都需要将序列号增加1，并批准一个新的定义来升级链码。版本参数用于跟踪链码二进制文件，只有在升级链码二进制文件时才需要更改。"
" "

#: ../../source/chaincode4noah.md:247
msgid ""
"You can use the Fabric chaincode lifecycle by creating a new channel and "
"setting the channel capabilities to V2_0. You will not be able to use the "
"previous lifecycle to install, instantiate, or update a chaincode on a "
"channels with V2_0 capabilities enabled. There is no upgrade support to the "
"v2.0 Alpha release, and no intended upgrade support from the the Alpha "
"release to future versions of v2.x."
msgstr ""
"您可以通过创建一个新通道并将通道功能设置为V2_0来使用Fabric链码生命周期。您将无法使用前一个生命周期在启用V2_0功能的通道上安装、实例化或更新链码。没有对v2.0"
" Alpha版本的升级支持，也没有从Alpha版本到未来版本v2.x的升级支持。"
