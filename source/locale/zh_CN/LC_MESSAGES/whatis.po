# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 王伟兵 <wbwang@inspur.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-01 12:09+0800\n"
"PO-Revision-Date: 2019-04-22 19:53+0000\n"
"Last-Translator: 王伟兵 <wbwang@inspur.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/hyperledger/teams/97220/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/whatis.md:1
msgid "Introduction"
msgstr ""

#: ../../source/whatis.md:3
msgid ""
"In general terms, a blockchain is an immutable transaction ledger, "
"maintained within a distributed network of peer nodes. These nodes each "
"maintain a copy of the ledger by applying transactions that have been "
"validated by a consensus protocol, grouped into blocks that include a hash "
"that bind each block to the preceding block."
msgstr ""
"一般来说，区块链是一个不可变的交易账本，在peer节点的分布式网络中维护。这些节点各自通过应用已由共识协议验证的交易来维护账本的副本，这些交易被分组为区块，区块包含着将每个区块绑定到前一个区块的哈希。"

#: ../../source/whatis.md:9
msgid ""
"The first and most widely recognized application of blockchain is the "
"Bitcoin cryptocurrency, though others have followed in its footsteps. "
"Ethereum, an alternative cryptocurrency, took a different approach, "
"integrating many of the same characteristics as Bitcoin but adding smart "
"contracts to create a platform for distributed applications. Bitcoin and "
"Ethereum fall into a class of blockchain that we would classify as public "
"permissionless blockchain technology.  Basically, these are public networks,"
" open to anyone, where participants interact anonymously."
msgstr ""
"区块链的第一个、也是得到最广泛认可的应用是比特币加密货币，不过其他应用程序也纷纷效仿。以太坊是另一种加密货币，它采用了不同的方法，集成了许多与比特币相同的特性，但添加了智能合约，为分布式应用程序创建了一个平台。比特币和以太坊属于区块链，我们将其归类为公共许可的区块链技术。基本上，这些是公共网络，对任何人开放，参与者匿名互动。"

#: ../../source/whatis.md:18
msgid ""
"As the popularity of Bitcoin, Ethereum and a few other derivative "
"technologies grew, interest in applying the underlying technology of the "
"blockchain, distributed ledger and distributed application platform to more "
"innovative enterprise use cases also grew. However, many enterprise use "
"cases require performance characteristics that the permissionless blockchain"
" technologies are unable (presently) to deliver. In addition, in many use "
"cases, the identity of the participants is a hard requirement, such as in "
"the case of financial transactions where Know-Your-Customer (KYC) and Anti-"
"Money Laundering (AML) regulations must be followed."
msgstr ""
"随着比特币、以太坊的普及，一些其它衍生技术的成长，人们对将区块链、分布式账本和分布式应用平台的底层技术应用于更具创新性的企业用例的兴趣也在增长。然而，许多企业用例需要性能特性，而无许可的区块链技术(目前)无法提供这些特性。此外，在许多用例中，验证参与者的身份是一个硬性需求，例如在必须遵循了解客户(KYC)和反洗钱(AML)规则的金融交易中。"

#: ../../source/whatis.md:28
msgid "For enterprise use, we need to consider the following requirements:"
msgstr "对于企业使用，我们需要考虑以下要求:"

#: ../../source/whatis.md:30
msgid "Participants must be identified/identifiable"
msgstr ""

#: ../../source/whatis.md:31
msgid "Networks need to be permissioned"
msgstr ""

#: ../../source/whatis.md:32
msgid "High transaction throughput performance"
msgstr ""

#: ../../source/whatis.md:33
msgid "Low latency of transaction confirmation"
msgstr ""

#: ../../source/whatis.md:34
msgid ""
"Privacy and confidentiality of transactions and data pertaining to business "
"transactions"
msgstr ""

#: ../../source/whatis.md:37
msgid ""
"While many early blockchain platforms are currently being adapted for "
"enterprise use, Hyperledger Fabric has been designed for enterprise use from"
" the outset. The following sections describe how Hyperledger Fabric (Fabric)"
" differentiates itself from other blockchain platforms and describes some of"
" the motivation for its architectural decisions."
msgstr ""
"虽然许多早期的区块链平台目前正在适应企业使用，但超级账本Fabric从一开始就为企业使用而设计。下面的部分描述了超级账本Fabric "
"(Fabric)如何将自己与其他区块链平台区别开来，并描述了其架构决策的一些动机。"

#: ../../source/whatis.md:43
msgid "Hyperledger Fabric"
msgstr ""

#: ../../source/whatis.md:45
msgid ""
"Hyperledger Fabric is an open source enterprise-grade permissioned "
"distributed ledger technology (DLT) platform, designed for use in enterprise"
" contexts, that delivers some key differentiating capabilities over other "
"popular distributed ledger or blockchain platforms."
msgstr ""
"超级账本Fabric是一个开源的企业级许可分布式账本技术(DLT)平台，设计用于企业上下文中，它提供了一些与其他流行的分布式账本或区块链平台相区别的关键功能。"

#: ../../source/whatis.md:50
msgid ""
"One key point of differentiation is that Hyperledger was established under "
"the Linux Foundation, which itself has a long and very successful history of"
" nurturing open source projects under open governance that grow strong "
"sustaining communities and thriving ecosystems. Hyperledger is governed by a"
" diverse technical steering committee, and the Hyperledger Fabric project by"
" a diverse set of maintainers from multiple organizations. It has a "
"development community that has grown to over 35 organizations and nearly 200"
" developers since its earliest commits."
msgstr ""
"一个关键区别是超级账本是在Linux基金会的基础上建立的，而Linux基金会本身也有很长一段非常成功的历史，在开放管理下培育开源项目，发展强大的可持续社区和繁荣的生态系统。超级账本由一个多样化的技术指导委员会管理，而超级账本Fabric项目则由来自多个组织的一组不同的维护者管理。它有一个开发社区，自其最早提交以来已经发展到超过35个组织和近200个开发人员。"

#: ../../source/whatis.md:59
msgid ""
"Fabric has a highly modular and configurable architecture, enabling "
"innovation, versatility and optimization for a broad range of industry use "
"cases including banking, finance, insurance, healthcare, human resources, "
"supply chain and even digital music delivery."
msgstr ""
"Fabric具有高度模块化和可配置的架构，能够为广泛的行业用例(包括银行、金融、保险、医疗、人力资源、供应链，甚至数字音乐交付)提供创新、多功能性和优化。"

#: ../../source/whatis.md:64
msgid ""
"Fabric is the first distributed ledger platform to support smart contracts "
"authored in general-purpose programming languages such as Java, Go and "
"Node.js, rather than constrained domain-specific languages (DSL). This means"
" that most enterprises already have the skill set needed to develop smart "
"contracts, and no additional training to learn a new language or DSL is "
"needed."
msgstr ""
"Fabric是第一个支持用Java、Go和Node.js等通用编程语言编写智能合约的分布式账本平台。而不是受限制的领域特定语言(DSL)。这意味着大多数企业已经具备了开发智能合约所需的技能，并且不需要额外的培训来学习一门新语言或DSL。"

#: ../../source/whatis.md:70
msgid ""
"The Fabric platform is also permissioned, meaning that, unlike with a public"
" permissionless network, the participants are known to each other, rather "
"than anonymous and therefore fully untrusted. This means that while the "
"participants may not fully trust one another (they may, for example, be "
"competitors in the same industry), a network can be operated under a "
"governance model that is built off of what trust does exist between "
"participants, such as a legal agreement or framework for handling disputes."
msgstr ""
"Fabric平台也是许可的，这意味着与公共无许可的网络不同，参与者彼此是相识的，而不是因匿名而完全互不信任。这意味着尽管参与者可能无法完全相互信任(例如,他们可能是同一行业的竞争对手)，网络可以在基于参与者之间信任的治理模型下运行，就如法律协议或框架来处理纠纷。"

#: ../../source/whatis.md:78
msgid ""
"One of the most important of the platform's differentiators is its support "
"for pluggable consensus protocols that enable the platform to be more "
"effectively customized to fit particular use cases and trust models. For "
"instance, when deployed within a single enterprise, or operated by a trusted"
" authority, fully byzantine fault tolerant consensus might be considered "
"unnecessary and an excessive drag on performance and throughput. In "
"situations such as that, a crash fault-tolerant (CFT) consensus protocol "
"might be more than adequate whereas, in a multi-party, decentralized use "
"case, a more traditional byzantine fault tolerant (BFT) consensus protocol "
"might be required."
msgstr ""
"该平台最重要的区别之一是它支持可插入的共识协议，这些协议使平台能够更有效地定制，以适应特定的用例和信任模型。例如，当部署在单个企业中，或者由可信的权威机构操作时，完全拜占庭式的容错共识可能被认为是不必要的，并且会对性能和吞吐量造成过度的拖累。在这种情况下，一个崩溃容错(CFT)共识协议可能就足够了，而在多参与方、去中心的用例中，可能需要一个更传统的拜占庭容错(BFT)共识协议。"

#: ../../source/whatis.md:91
msgid ""
"Fabric can leverage consensus protocols that do not require a native "
"cryptocurrency to incent costly mining or to fuel smart contract execution. "
"Avoidance of a cryptocurrency reduces some significant risk/attack vectors, "
"and absence of cryptographic mining operations means that the platform can "
"be deployed with roughly the same operational cost as any other distributed "
"system."
msgstr ""
"Fabric可以利用的共识协议不需要象原生加密货币那样激励高成本挖矿激励或促进智能契约执行。避免使用加密货币可以减少一些重要的风险/攻击方向，而没有加密挖矿操作意味着平台部署后，其运行成本与任何其他分布式系统大致相同。"

#: ../../source/whatis.md:97
msgid ""
"The combination of these differentiating design features makes Fabric one of"
" the better performing platforms available today both in terms of "
"transaction processing and transaction confirmation latency, and it enables "
"privacy and confidentiality of transactions and the smart contracts (what "
"Fabric calls \"chaincode\") that implement them."
msgstr ""
"这些不同的设计特性的组合使得Fabric成为当今性能更好的平台之一，无论是在交易处理还是交易确认延迟方面都是如此，而且它还支持交易和实现交易的智能合约（Fabric叫“链码”）的隐私和机密性。"

#: ../../source/whatis.md:102
msgid "Let's explore these differentiating features in more detail."
msgstr "让我们更详细地探讨这些不同的特性。"

#: ../../source/whatis.md:104
msgid "Modularity"
msgstr ""

#: ../../source/whatis.md:106
msgid ""
"Hyperledger Fabric has been specifically architected to have a modular "
"architecture. Whether it is pluggable consensus, pluggable identity "
"management protocols such as LDAP or OpenID Connect, key management "
"protocols or cryptographic libraries, the platform has been designed at its "
"core to be configured to meet the diversity of enterprise use case "
"requirements."
msgstr ""
"超级账本Fabric被特别设计成具有模块化架构。无论它是可插入的共识协议、可插入的身份管理协议(如LDAP或OpenID连接)、密钥管理协议还是加密库，该平台的核心都被设计为可配置以满足企业用例需求的多样性。"

#: ../../source/whatis.md:112
msgid ""
"At a high level, Fabric is comprised of the following modular components:"
msgstr "在高层，Fabric由以下模块组件组成:"

#: ../../source/whatis.md:114
msgid ""
"A pluggable ordering service establishes consensus on the order of "
"transactions and then broadcasts blocks to peers."
msgstr ""

#: ../../source/whatis.md:116
msgid ""
"A pluggable membership service provider is responsible for associating "
"entities in the network with cryptographic identities."
msgstr ""

#: ../../source/whatis.md:118
msgid ""
"An optional peer-to-peer gossip service disseminates the blocks output by "
"ordering service to other peers."
msgstr ""

#: ../../source/whatis.md:120
msgid ""
"Smart contracts (\"chaincode\") run within a container environment (e.g. "
"Docker) for isolation. They can be written in standard programming languages"
" but do not have direct access to the ledger state."
msgstr ""

#: ../../source/whatis.md:123
msgid "The ledger can be configured to support a variety of DBMSs."
msgstr ""

#: ../../source/whatis.md:124
msgid ""
"A pluggable endorsement and validation policy enforcement that can be "
"independently configured per application."
msgstr ""

#: ../../source/whatis.md:127
msgid ""
"There is fair agreement in the industry that there is no \"one blockchain to"
" rule them all\". Hyperledger Fabric can be configured in multiple ways to "
"satisfy the diverse solution requirements for multiple industry use cases."
msgstr "业内有一个公平的认识，即没有“一个区块链来统治所有人”。可以以多种方式配置超级账本Fabric，以满足多个行业用例的不同解决方案需求。"

#: ../../source/whatis.md:131
msgid "Permissioned vs Permissionless Blockchains"
msgstr ""

#: ../../source/whatis.md:133
msgid ""
"In a permissionless blockchain, virtually anyone can participate, and every "
"participant is anonymous. In such a context, there can be no trust other "
"than that the state of the blockchain, prior to a certain depth, is "
"immutable. In order to mitigate this absence of trust, permissionless "
"blockchains typically employ a \"mined\" native cryptocurrency or "
"transaction fees to provide economic incentive to offset the extraordinary "
"costs of participating in a form of byzantine fault tolerant consensus based"
" on \"proof of work\" (PoW)."
msgstr ""
"在一个无许可的区块链中，几乎任何人都可以参与，而且每个参与者都是匿名的。在这样的上下文中，除了区块链在一定深度之前的状态是不可变的之外，不能有其他信任。为了缓解这种信任缺失，无许可区块链通常采用原生加密货币“挖矿”或交易费来提供经济激励，以抵消参与基于“工作证明”(PoW)的拜占庭容错共识的巨大成本。"

#: ../../source/whatis.md:141
msgid ""
"Permissioned blockchains, on the other hand, operate a blockchain amongst a "
"set of known, identified and often vetted participants operating under a "
"governance model that yields a certain degree of trust. A permissioned "
"blockchain provides a way to secure the interactions among a group of "
"entities that have a common goal but which may not fully trust each other. "
"By relying on the identities of the participants, a permissioned blockchain "
"can use more traditional crash fault tolerant (CFT) or byzantine fault "
"tolerant (BFT) consensus protocols that do not require costly mining."
msgstr ""
"另一方面，许可区块链在一组已知的、验证的和经常被审查的参与者中运行区块链，这些参与者在产生一定程度信任的治理模型下运行。许可区块链提供了一种方法来保护一组实体之间的交互，这些实体有一个共同的目标，但是它们之间可能并不完全信任彼此。通过依赖参与者的身份，许可区块链可以使用更传统的容错崩溃协议(CFT)或拜占庭容错协议(BFT)，这些协议不需要昂贵的挖矿。"

#: ../../source/whatis.md:150
msgid ""
"Additionally, in such a permissioned context, the risk of a participant "
"intentionally introducing malicious code through a smart contract is "
"diminished. First, the participants are known to one another and all "
"actions, whether submitting application transactions, modifying the "
"configuration of the network or deploying a smart contract are recorded on "
"the blockchain following an endorsement policy that was established for the "
"network and relevant transaction type. Rather than being completely "
"anonymous, the guilty party can be easily identified and the incident "
"handled in accordance with the terms of the governance model."
msgstr ""
"此外，在这种一个许可上下文中，参与者通过智能合约故意引入恶意代码的风险降低了。首先，参与者彼此都是已知的，并且所有的操作，无论是提交应用程序交易、修改网络配置还是部署智能合约，都按照针对网络和相关交易类型建立的背书策略记录在区块链上。而不是完全匿名，犯罪方很容易识别，以及按照治理模型的条款处理事件。"

#: ../../source/whatis.md:160
msgid "Smart Contracts"
msgstr ""

#: ../../source/whatis.md:162
msgid ""
"A smart contract, or what Fabric calls \"chaincode\", functions as a trusted"
" distributed application that gains its security/trust from the blockchain "
"and the underlying consensus among the peers. It is the business logic of a "
"blockchain application."
msgstr ""
"一个智能合约，或者Fabric所称的“链码”，作为一个受信任的分布式应用程序，从区块链和peer之间的底层共识中获得安全/信任。它是区块链应用程序的业务逻辑。"

#: ../../source/whatis.md:167
msgid ""
"There are three key points that apply to smart contracts, especially when "
"applied to a platform:"
msgstr ""
"有三个要点适用于智能合约，尤其是应用于平台时:\n"
"许多智能合约在网络中同时运行，\n"
"它们可以动态部署(在许多情况下，任何人都可以)，并且\n"
"应用程序代码应该被视为不可信的，甚至可能是恶意的。"

#: ../../source/whatis.md:170
msgid "many smart contracts run concurrently in the network,"
msgstr ""

#: ../../source/whatis.md:171
msgid "they may be deployed dynamically (in many cases by anyone), and"
msgstr ""

#: ../../source/whatis.md:172
msgid ""
"application code should be treated as untrusted, potentially even malicious."
msgstr ""

#: ../../source/whatis.md:175
msgid ""
"Most existing smart-contract capable blockchain platforms follow an order-"
"execute architecture in which the consensus protocol:"
msgstr ""
"大多数现有的支持智能合约的区块链平台遵循一个顺序执行架构，其中的共识协议:\n"
"- 验证和排序交易，然后将它们传播到所有peer节点，\n"
"- 然后，每个peer按顺序执行交易。"

#: ../../source/whatis.md:178
msgid ""
"validates and orders transactions then propagates them to all peer nodes,"
msgstr ""

#: ../../source/whatis.md:179
msgid "each peer then executes the transactions sequentially."
msgstr ""

#: ../../source/whatis.md:181
msgid ""
"The order-execute architecture can be found in virtually all existing "
"blockchain systems, ranging from public/permissionless platforms such as "
"Ethereum (with PoW-based consensus) to permissioned platforms such as "
"Tendermint, Chain, and Quorum."
msgstr ""
"排序执行架构几乎可以在所有现有的区块链系统中找到，从公共/无许可平台如以太坊(基于PoW共识)到许可平台如Tendermint、Chain和Quorum。"

#: ../../source/whatis.md:187
msgid ""
"Smart contracts executing in a blockchain that operates with the order-"
"execute architecture must be deterministic; otherwise, consensus might never"
" be reached. To address the non-determinism issue, many platforms require "
"that the smart contracts be written in a non-standard, or domain-specific "
"language (such as Solidity) so that non-deterministic operations can be "
"eliminated. This hinders wide-spread adoption because it requires developers"
" writing smart contracts to learn a new language and may lead to programming"
" errors."
msgstr ""
"在使用排序执行架构的区块链中执行的智能合约必须是确定性的;否则，可能永远无法达成共识。为了解决非确定性问题，许多平台要求智能合约使用非标准或特定于领域的语言(如Solidity)编写，以便消除非确定性操作。这阻碍了广泛采用，因为它要求编写智能合约的开发人员学习一种新语言，并可能导致编程错误。"

#: ../../source/whatis.md:196
msgid ""
"Further, since all transactions are executed sequentially by all nodes, "
"performance and scale is limited. The fact that the smart contract code "
"executes on every node in the system demands that complex measures be taken "
"to protect the overall system from potentially malicious contracts in order "
"to ensure resiliency of the overall system."
msgstr ""
"此外，由于所有交易都由所有节点按顺序执行，因此性能和规模受到限制。智能合约代码在系统中的每个节点上执行，这一事实要求采取复杂的措施来保护整个系统免受潜在恶意合约的攻击，以确保整个系统的弹性。"

#: ../../source/whatis.md:202
msgid "A New Approach"
msgstr ""

#: ../../source/whatis.md:204
msgid ""
"Fabric introduces a new architecture for transactions that we call execute-"
"order-validate. It addresses the resiliency, flexibility, scalability, "
"performance and confidentiality challenges faced by the order-execute model "
"by separating the transaction flow into three steps:"
msgstr ""
"Fabric为交易引入了一种新的架构，我们称之为execute-order-validate。它通过将交易流程分成三个步骤来解决order-execute模型所面临的弹性、灵活性、可伸缩性、性能和保密性方面的挑战:\n"
"- 执行交易并检查其正确性，从而为它背书，\n"
"- 通过一个(可插入的)共识协议对交易排序，并且\n"
"- 在将交易提交到账本之前，根据特定于应用程序的背书策略验证交易"

#: ../../source/whatis.md:209
msgid "execute a transaction and check its correctness, thereby endorsing it,"
msgstr ""

#: ../../source/whatis.md:210
msgid "order transactions via a (pluggable) consensus protocol, and"
msgstr ""

#: ../../source/whatis.md:211
msgid ""
"validate transactions against an application-specific endorsement policy "
"before committing them to the ledger"
msgstr ""

#: ../../source/whatis.md:214
msgid ""
"This design departs radically from the order-execute paradigm in that Fabric"
" executes transactions before reaching final agreement on their order."
msgstr "这种设计与Fabric中的order-execute范例截然不同，后者在就顺序达成最终协议之前执行交易。"

#: ../../source/whatis.md:217
msgid ""
"In Fabric, an application-specific endorsement policy specifies which peer "
"nodes, or how many of them, need to vouch for the correct execution of a "
"given smart contract. Thus, each transaction need only be executed "
"(endorsed) by the subset of the peer nodes necessary to satisfy the "
"transaction's endorsement policy. This allows for parallel execution "
"increasing overall performance and scale of the system. This first phase "
"also eliminates any non-determinism, as inconsistent results can be filtered"
" out before ordering."
msgstr ""
"在Fabric中，特定于应用程序的背书策略指定需要哪些peer节点，或者需要多少节点来保证正确执行给定的智能合约。因此，每个交易只需要由满足交易的背书策略所需的peer节点子集执行(背书)。这允许并行执行，从而提高系统的总体性能和规模。第一个阶段还消除了任何非确定性，因为可以在排序之前过滤掉不一致的结果。"

#: ../../source/whatis.md:225
msgid ""
"Because we have eliminated non-determinism, Fabric is the first blockchain "
"technology that enables use of standard programming languages. In the 1.1.0 "
"release, smart contracts can be written in either Go or Node.js, while there"
" are plans to support other popular languages including Java in subsequent "
"releases."
msgstr ""
"因为我们消除了非确定性，Fabric是第一个支持使用标准编程语言的区块链技术。在1.1.0版本中，可以用Go或Node.js编写智能合约，同时计划在后续版本中支持其他流行语言，包括Java。"

#: ../../source/whatis.md:230
msgid "Privacy and Confidentiality"
msgstr ""

#: ../../source/whatis.md:232
msgid ""
"As we have discussed, in a public, permissionless blockchain network that "
"leverages PoW for its consensus model, transactions are executed on every "
"node. This means that neither can there be confidentiality of the contracts "
"themselves, nor of the transaction data that they process. Every "
"transaction, and the code that implements it, is visible to every node in "
"the network. In this case, we have traded confidentiality of contract and "
"data for byzantine fault tolerant consensus delivered by PoW."
msgstr ""
"正如我们已经讨论过的，在一个公共的、无许可的区块链网络中，交易在每个节点上执行。这意味着既不能对合约本身保密，也不能对它们处理的交易数据保密。每个交易及其实现代码对网络中的每个节点都是可见的。在这种情况下，我们用合约和数据的保密性代替了PoW提供的拜占庭容错共识。"

#: ../../source/whatis.md:240
msgid ""
"This lack of confidentiality can be problematic for many business/enterprise"
" use cases. For example, in a network of supply-chain partners, some "
"consumers might be given preferred rates as a means of either solidifying a "
"relationship, or promoting additional sales. If every participant can see "
"every contract and transaction, it becomes impossible to maintain such "
"business relationships in a completely transparent network -- everyone will "
"want the preferred rates!"
msgstr ""
"对于许多业务/企业用例来说，这种保密性的缺乏可能会带来问题。例如，在供应链合作伙伴网络中，一些消费者可能会获得优惠价格（作为巩固关系或促进额外销售的一种手段）。如果每个参与者都能看到每个合约和交易，那么在一个完全透明的网络中维护这样的业务关系就不可能了——每个人都想要优惠价格!"

#: ../../source/whatis.md:247
msgid ""
"As a second example, consider the securities industry, where a trader "
"building a position (or disposing of one) would not want her competitors to "
"know of this, or else they will seek to get in on the game, weakening the "
"trader's gambit."
msgstr "第二个例子是证券业，建立头寸(或卖出头寸)的交易员不希望自己的竞争对手知道这一点，否则他们会试图参与进来，削弱交易员的策略。"

#: ../../source/whatis.md:251
msgid ""
"In order to address the lack of privacy and confidentiality for purposes of "
"delivering on enterprise use case requirements, blockchain platforms have "
"adopted a variety of approaches. All have their trade-offs."
msgstr "为了解决在交付企业用例需求时缺乏隐私和机密性的问题，区块链平台采用了多种方法。他们都有自己的权衡。"

#: ../../source/whatis.md:255
msgid ""
"Encrypting data is one approach to providing confidentiality; however, in a "
"permissionless network leveraging PoW for its consensus, the encrypted data "
"is sitting on every node. Given enough time and computational resource, the "
"encryption could be broken. For many enterprise use cases, the risk that "
"their information could become compromised is unacceptable."
msgstr ""
"加密数据是提供机密性的一种方法;然而，在一个利用PoW达成共识的无许可网络中，加密的数据位于每个节点上。只要有足够的时间和计算资源，密文就可以被破解。对于许多企业用例来说，他们的信息可能被泄露的风险是不可接受的。"

#: ../../source/whatis.md:261
msgid ""
"Zero knowledge proofs (ZKP) are another area of research being explored to "
"address this problem, the trade-off here being that, presently, computing a "
"ZKP requires considerable time and computational resources. Hence, the "
"trade-off in this case is performance for confidentiality."
msgstr ""
"零知识证明(ZKP)是另一个研究领域，正在探索解决这个问题，这里的权衡是，目前，计算一个ZKP需要相当多的时间和计算资源。因此，在这种情况下，为了保密性牺牲了性能。"

#: ../../source/whatis.md:266
msgid ""
"In a permissioned context that can leverage alternate forms of consensus, "
"one might explore approaches that restrict the distribution of confidential "
"information exclusively to authorized nodes."
msgstr "在可以利用其他共识形式的许可上下文中，可以探讨将机密信息的分发限制在仅授权节点上的方法。"

#: ../../source/whatis.md:270
msgid ""
"Hyperledger Fabric, being a permissioned platform, enables confidentiality "
"through its channel architecture. Basically, participants on a Fabric "
"network can establish a \"channel\" between the subset of participants that "
"should be granted visibility to a particular set of transactions. Think of "
"this as a network overlay. Thus, only those nodes that participate in a "
"channel have access to the smart contract (chaincode) and data transacted, "
"preserving the privacy and confidentiality of both."
msgstr ""
"超级账本Fabric是一个许可平台，它通过其通道架构实现了保密性。基本上，Fabric网络上的参与者可以在部分参与者之间建立一个“通道”，该授权通道可以看到特定交易集合。可以将其想象成覆盖网络。因此，只有那些参与通道的节点才能访智能合约(链码)和交易的数据，从而保护隐私和机密性。"

#: ../../source/whatis.md:278
msgid ""
"To improve upon its privacy and confidentiality capabilities, Fabric has "
"added support for private data and is working on zero knowledge proofs (ZKP)"
" available in the future. More on this as it becomes available."
msgstr ""
"为了提高其隐私性和保密性，Fabric增加了对私有数据的支持，并且正在开发将来可用的零知识证明(zero knowledge proof, "
"ZKP)。更多关于这一点，因为它变得可用。"

#: ../../source/whatis.md:283
msgid "Pluggable Consensus"
msgstr ""

#: ../../source/whatis.md:285
msgid ""
"The ordering of transactions is delegated to a modular component for "
"consensus that is logically decoupled from the peers that execute "
"transactions and maintain the ledger. Specifically, the ordering service. "
"Since consensus is modular, its implementation can be tailored to the trust "
"assumption of a particular deployment or solution. This modular architecture"
" allows the platform to rely on well-established toolkits for CFT (crash "
"fault-tolerant) or BFT (byzantine fault-tolerant) ordering."
msgstr ""
"交易的排序被委托给一个模块化共识组件，以便在逻辑上与执行交易和维护账本的peer解耦。具体来说，是排序服务。由于共识是模块化的，因此其实现可以根据特定部署或解决方案的信任假设进行定制。这种模块化的架构允许平台依赖于成熟的CFT(崩溃容错)或BFT(拜占庭容错)排序工具包。"

#: ../../source/whatis.md:293
msgid ""
"Fabric currently offers two CFT ordering service implementations. The first "
"is based on the etcd library of the Raft protocol. The other is Kafka (which"
" uses Zookeeper internally). For information about currently available "
"ordering services, check out our conceptual documentation about ordering."
msgstr ""
"Fabric目前提供两种CFT排序服务实现。第一种是基于Raft协议的etcd库。另一个是Kafka(内部使用Zookeeper)。有关当前可用的排序服务的信息，请参阅我们关于排序的概念文档。"

#: ../../source/whatis.md:299
msgid ""
"Note also that these are not mutually exclusive. A Fabric network can have "
"multiple ordering services supporting different applications or application "
"requirements."
msgstr "还请注意，这些并不相互排斥。Fabric网络可以有多个排序服务，支持不同的应用程序或应用程序需求。"

#: ../../source/whatis.md:303
msgid "Performance and Scalability"
msgstr ""

#: ../../source/whatis.md:305
msgid ""
"Performance of a blockchain platform can be affected by many variables such "
"as transaction size, block size, network size, as well as limits of the "
"hardware, etc. The Hyperledger community is currently developing a draft set"
" of measures within the Performance and Scale working group, along with a "
"corresponding implementation of a benchmarking framework called Hyperledger "
"Caliper."
msgstr ""
"区块链平台的性能受许多变量的影响，如交易大小、区块大小、网络大小以及硬件的限制等。超级账本社区目前正在Performance and "
"Scale工作组内开发一套度量标准草案，以及一个名为超级账本Caliper的基准框架的相应实现。"

#: ../../source/whatis.md:311
msgid ""
"While that work continues to be developed and should be seen as a definitive"
" measure of blockchain platform performance and scale characteristics, a "
"team from IBM Research has published a peer reviewed paper that evaluated "
"the architecture and performance of Hyperledger Fabric. The paper offers an "
"in-depth discussion of the architecture of Fabric and then reports on the "
"team's performance evaluation of the platform using a preliminary release of"
" Hyperledger Fabric v1.1."
msgstr ""
"虽然这项工作还在继续开发中，并且应该被看作是对区块链平台性能和规模特性的确定度量，但是IBM "
"Research的一个团队已经发表了一篇同行评审的论文，对超级账本Fabric的架构和性能进行了评估。本文对Fabric的架构进行了深入的讨论，然后使用超级账本Fabric"
" v1.1的初步版本报告了团队对该平台的性能评估。"

#: ../../source/whatis.md:320
msgid ""
"The benchmarking efforts that the research team did yielded a significant "
"number of performance improvements for the Fabric v1.1.0 release that more "
"than doubled the overall performance of the platform from the v1.0.0 release"
" levels."
msgstr "研究团队所做的基准测试工作为Fabric v1.1.0版本带来了大量性能改进，使平台的总体性能比v1.0.0版本提高了一倍多。"

#: ../../source/whatis.md:324
msgid "Conclusion"
msgstr ""

#: ../../source/whatis.md:326
msgid ""
"Any serious evaluation of blockchain platforms should include Hyperledger "
"Fabric in its short list."
msgstr "任何对区块链平台的认真评估都应该在其短列表中包括超级账本Fabric。"

#: ../../source/whatis.md:329
msgid ""
"Combined, the differentiating capabilities of Fabric make it a highly "
"scalable system for permissioned blockchains supporting flexible trust "
"assumptions that enable the platform to support a wide range of industry use"
" cases ranging from government, to finance, to supply-chain logistics, to "
"healthcare and so much more."
msgstr ""
"综合而言，Fabric的差异化功能使其成为一个高度可伸缩的系统，可用于许可区块链，支持灵活的信任假设，从而使该平台支持广泛的行业用例，从政府、到金融、到供应链物流、到医疗保健等等。"

#: ../../source/whatis.md:335
msgid ""
"More importantly, Hyperledger Fabric is the most active of the (currently) "
"ten Hyperledger projects. The community building around the platform is "
"growing steadily, and the innovation delivered with each successive release "
"far out-paces any of the other enterprise blockchain platforms."
msgstr ""
"更重要的是，超级账本Fabric是(当前)十个超级账本项目中最活跃的一个。围绕该平台的社区建设正在稳步增长，每一个连续发布的创新都远远超过其他任何企业区块链平台。"

#: ../../source/whatis.md:340
msgid "Acknowledgement"
msgstr ""

#: ../../source/whatis.md:342
msgid ""
"The preceding is derived from the peer reviewed \"Hyperledger Fabric: A "
"Distributed Operating System for Permissioned Blockchains\" - Elli "
"Androulaki, Artem Barger, Vita Bortnikov, Christian Cachin, Konstantinos "
"Christidis, Angelo De Caro, David Enyeart, Christopher Ferris, Gennady "
"Laventman, Yacov Manevich, Srinivasan Muralidharan, Chet Murthy, Binh "
"Nguyen, Manish Sethi, Gari Singh, Keith Smith, Alessandro Sorniotti, "
"Chrysoula Stathakopoulou, Marko Vukolic, Sharon Weed Cocco, Jason Yellick"
msgstr ""
"前文出自可限定全文”超级账本Fabric：一个对于许可区块链的分布式操作系统”——- Elli Androulaki, Artem Barger, "
"Vita Bortnikov, Christian Cachin, Konstantinos Christidis, Angelo De Caro, "
"David Enyeart, Christopher Ferris, Gennady Laventman, Yacov Manevich, "
"Srinivasan Muralidharan, Chet Murthy, Binh Nguyen, Manish Sethi, Gari Singh,"
" Keith Smith, Alessandro Sorniotti, Chrysoula Stathakopoulou, Marko Vukolic,"
" Sharon Weed Cocco, Jason Yellick"
