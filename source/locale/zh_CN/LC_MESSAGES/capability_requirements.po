# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 王伟兵 <wbwang@inspur.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-23 09:48+0800\n"
"PO-Revision-Date: 2019-04-22 19:56+0000\n"
"Last-Translator: 王伟兵 <wbwang@inspur.com>, 2019\n"
"Language-Team: Chinese (China) (https://www.transifex.com/hyperledger/teams/97220/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/capability_requirements.rst:2
msgid "Capability Requirements"
msgstr "功能需求"

#: ../../source/capability_requirements.rst:4
msgid ""
"Because Fabric is a distributed system that will usually involve multiple "
"organizations (sometimes in different countries or even continents), it is "
"possible (and typical) that many different versions of Fabric code will "
"exist in the network. Nevertheless, it’s vital that networks process "
"transactions in the same way so that everyone has the same view of the "
"current network state."
msgstr ""
"由于Fabric是一个分布式系统，通常会涉及多个组织(有时在不同的国家甚至大洲)，所以网络中可能(而且是典型的)存在许多不同版本的Fabric代码。然而，重要的是，网络以相同的方式处理交易，这样每个人对当前网络状态都有相同的看法。"

#: ../../source/capability_requirements.rst:10
msgid ""
"This means that every network -- and every channel within that network – "
"must define a set of what we call “capabilities” to be able to participate "
"in processing transactions. For example, Fabric v1.1 introduces new MSP role"
" types of “Peer” and “Client”. However, if a v1.0 peer does not understand "
"these new role types, it will not be able to appropriately evaluate an "
"endorsement policy that references them. This means that before the new role"
" types may be used, the network must agree to enable the v1.1 ``channel`` "
"capability requirement, ensuring that all peers come to the same decision."
msgstr ""
"这意味着每个网络，以及该网络中的每个通道，必须定义一组我们称为“功能”的东西，以便能够参与处理交易。例如，Fabric "
"v1.1引入了新的MSP角色类型“Peer”和“Client”。但是，如果1.0版本的节点不理解这些新角色类型，那么它将无法恰当地验证引用它们的背书策略。这意味着在使用新角色类型之前，网络必须同意启用v1.1的“通道”功能需求，确保所有节点都做出相同的决定。"

#: ../../source/capability_requirements.rst:19
msgid ""
"Only binaries which support the required capabilities will be able to "
"participate in the channel, and newer binary versions will not enable new "
"validation logic until the corresponding capability is enabled.  In this "
"way, capability requirements ensure that even with disparate builds and "
"versions, it is not possible for the network to suffer a state fork."
msgstr ""
"只有支持所需功能的二进制文件才能参与通道，较新的二进制版本在启用相应功能之前不会启用新的验证逻辑。通过这种方式，功能需求确保即使使用不同的构建和版本，网络也不可能出现状态分支。"

#: ../../source/capability_requirements.rst:26
msgid "Defining Capability Requirements"
msgstr "定义功能需求"

#: ../../source/capability_requirements.rst:28
msgid ""
"Capability requirements are defined per channel in the channel configuration"
" (found in the channel’s most recent configuration block). The channel "
"configuration contains three locations, each of which defines a capability "
"of a different type."
msgstr "功能需求是在通道配置中为每个通道定义的(可以在通道的最新配置区块中找到)。通道配置包含三个位置，每个位置定义了一个不同类型的功能。"

#: ../../source/capability_requirements.rst:33
msgid "Capability Type"
msgstr "功能类型"

#: ../../source/capability_requirements.rst:33
msgid "Canonical Path"
msgstr "标准路径"

#: ../../source/capability_requirements.rst:33
msgid "JSON Path"
msgstr "JSON路径"

#: ../../source/capability_requirements.rst:35
msgid "Channel"
msgstr "通道"

#: ../../source/capability_requirements.rst:35
msgid "/Channel/Capabilities"
msgstr "/通道/功能"

#: ../../source/capability_requirements.rst:35
msgid ".channel_group.values.Capabilities"
msgstr ".channel_group.values.Capabilities"

#: ../../source/capability_requirements.rst:37
msgid "Orderer"
msgstr "排序器"

#: ../../source/capability_requirements.rst:37
msgid "/Channel/Orderer/Capabilities"
msgstr "/通道/排序器/功能"

#: ../../source/capability_requirements.rst:37
msgid ".channel_group.groups.Orderer.values.Capabilities"
msgstr ".channel_group.groups.Orderer.values.Capabilities"

#: ../../source/capability_requirements.rst:39
msgid "Application"
msgstr "应用"

#: ../../source/capability_requirements.rst:39
msgid "/Channel/Application/Capabilities"
msgstr "/通道/应用/功能"

#: ../../source/capability_requirements.rst:39
msgid ".channel_group.groups.Application.values. Capabilities"
msgstr ".channel_group.groups.Application.values. Capabilities"

#: ../../source/capability_requirements.rst:43
msgid ""
"**Channel:** these capabilities apply to both peer and orderers and are "
"located in the root ``Channel`` group."
msgstr "**Channel：**这些功能同时适用于节点和排序器，并且位于根“通道”组中。"

#: ../../source/capability_requirements.rst:46
msgid ""
"**Orderer:** apply to orderers only and are located in the ``Orderer`` "
"group."
msgstr "**Orderer：**只适用于排序器，并且位于“排序器”组中。"

#: ../../source/capability_requirements.rst:48
msgid ""
"**Application:** apply to peers only and are located in the ``Application`` "
"group."
msgstr "**Application:**只适用于节点，并且位于“应用程序”组中。"

#: ../../source/capability_requirements.rst:50
msgid ""
"The capabilities are broken into these groups in order to align with the "
"existing administrative structure. Updating orderer capabilities is "
"something the ordering orgs would manage independent of the application "
"orgs. Similarly, updating application capabilities is something only the "
"application admins would manage. By splitting the capabilities between "
"\"Orderer\" and \"Application\", a hypothetical network could run a v1.6 "
"ordering service while supporting a v1.3 peer application network."
msgstr ""
"为了与现有的管理结构保持一致，将功能分解为这些组。更新排序器功能是排序器组织独立于应用组织来管理的。类似地，只有应用管理员才会管理更新应用功能。通过在“Orderer”和“Application”之间划分功能，一个假设的网络可以运行v1.6排序服务，同时支持v1.3节点应用网络。"

#: ../../source/capability_requirements.rst:57
msgid ""
"However, some capabilities cross both the ‘Application’ and ‘Orderer’ "
"groups. As we saw earlier, adding a new MSP role type is something both the "
"orderer and application admins agree to and need to recognize. The orderer "
"must understand the meaning of MSP roles in order to allow the transactions "
"to pass through ordering, while the peers must understand the roles in order"
" to validate the transaction. These kinds of capabilities -- which span both"
" the application and orderer components -- are defined in the top level "
"\"Channel\" group."
msgstr ""
"然而，有些功能跨“Application”和“Orderer”组。正如我们前面看到的，添加新的MSP角色类型是排序器和应用管理员都同意和需要确认。排序器必须理解MSP角色的含义，以便允许交易通过排序，而节点必须理解角色，以便验证交易。这些跨应用和排序器组件的功能在顶层“Channel”组中定义。"

#: ../../source/capability_requirements.rst:65
msgid ""
"It is possible that the channel capabilities are defined to be at version "
"v1.3 while the orderer and application capabilities are defined to be at "
"version 1.1 and v1.4, respectively. Enabling a capability at the \"Channel\""
" group level does not imply that this same capability is available at the "
"more specific \"Orderer\" and \"Application\" group levels."
msgstr ""
"有可能将通道功能定义为版本v1.3，而将排序器和应用功能分别定义为版本1.1和版本1.4。在“通道”组级别启用功能并不意味着在更特定的“Orderer”和“Application”组级别也可以使用相同的功能。"

#: ../../source/capability_requirements.rst:72
msgid "Setting Capabilities"
msgstr "设置功能"

#: ../../source/capability_requirements.rst:74
msgid ""
"Capabilities are set as part of the channel configuration (either as part of"
" the initial configuration -- which we'll talk about in a moment -- or as "
"part of a reconfiguration)."
msgstr "功能被设置为通道配置的一部分(作为初始配置的一部分，我们稍后将讨论它，或者作为重新配置的一部分)。"

#: ../../source/capability_requirements.rst:78
msgid ""
"We have a two documents that talk through different aspects of channel "
"reconfigurations. First, we have a tutorial that will take you through the "
"process of :doc:`channel_update_tutorial`. And we also have a document that "
"talks through :doc:`config_update` which gives an overview of the different "
"kinds of updates that are possible as well as a fuller look at the signature"
" process."
msgstr ""
"我们有两个文档讨论通道重新配置的不同方面。首先，我们有一个教程:doc: ` channel_update_tutorial "
"`，将带您通过这个过程。我们还有一个文档:doc: ' config_update '来进行讨论，它概述了各种可能的更新，并更全面地查看了签名过程。"

#: ../../source/capability_requirements.rst:85
msgid ""
"Because new channels copy the configuration of the Orderer System Channel by"
" default, new channels will automatically be configured to work with the "
"orderer and channel capabilities of the Orderer System Channel and the "
"application capabilities specified by the channel creation transaction. "
"Channels that already exist, however, must be reconfigured."
msgstr ""
"由于新通道默认情况下复制了排序器系统通道的配置，因此将自动配置新通道，使其使用排序器系统通道的功能，以及通道创建交易指定的应用功能。但是，必须重新配置已经存在的通道。"

#: ../../source/capability_requirements.rst:91
msgid "The schema for the Capabilities value is defined in the protobuf as:"
msgstr "功能值的数据结构在protobuf中定义为:"

#: ../../source/capability_requirements.rst:101
msgid "As an example, rendered in JSON:"
msgstr "例如，在JSON中呈现:"

#: ../../source/capability_requirements.rst:112
msgid "Capabilities in an Initial Configuration"
msgstr "初始配置中的功能"

#: ../../source/capability_requirements.rst:114
msgid ""
"In the ``configtx.yaml`` file distributed in the ``config`` directory of the"
" release artifacts, there is a ``Capabilities`` section which enumerates the"
" possible capabilities for each capability type (Channel, Orderer, and "
"Application)."
msgstr ""
"在文件“configtx.yaml”的发布构件的“config”目录中，有一个“功能”部分，列举了每种功能类型(通道、排序器和应用)的可能功能。"

#: ../../source/capability_requirements.rst:118
msgid ""
"The simplest way to enable capabilities is to pick a v1.1 sample profile and"
" customize it for your network. For example:"
msgstr "用功能的最简单方法是选择一个v1.1示例概要文件（profile），并为您的网络定制它。例如:"

#: ../../source/capability_requirements.rst:137
msgid ""
"Note that there is a ``Capabilities`` section defined at the root level (for"
" the channel capabilities), and at the Orderer level (for orderer "
"capabilities). The sample above uses a YAML reference to include the "
"capabilities as defined at the bottom of the YAML."
msgstr ""
"注意，在根级别(用于通道功能)和排序器级别(用于排序器功能)定义了一个“‘Capabilities’”部分。上面的示例使用了一个YAML引用来包含YAML底部定义的功能。"

#: ../../source/capability_requirements.rst:141
msgid ""
"When defining the orderer system channel there is no Application section, as"
" those capabilities are defined during the creation of an application "
"channel. To define a new channel's application capabilities at channel "
"creation time, the application admins should model their channel creation "
"transaction after the ``SampleSingleMSPChannelV1_1`` profile."
msgstr ""
"当定义排序器系统通道时，没有应用部分，因为这些功能是在创建应用通道时定义的。要在通道创建时定义新通道的应用功能，应用管理员应该在“SampleSingleMSPChannelV1_1”概要文件(profile)之后为其通道创建交易建模。"

#: ../../source/capability_requirements.rst:156
msgid ""
"Here, the Application section has a new element ``Capabilities`` which "
"references the ``ApplicationCapabilities`` section defined at the end of the"
" YAML."
msgstr ""
"这里，Application部分有一个新元素``Capabilities`` "
"，它引用了在YAML末尾定义的``ApplicationCapabilities``部分。"

#: ../../source/capability_requirements.rst:159
msgid ""
"The capabilities for the Channel and Orderer sections are inherited from the"
" definition in the ordering system channel and are automatically included by"
" the orderer during the process of channel creation."
msgstr "通道和排序器部分的功能继承自排序器系统通道中的定义，并在通道创建过程中由排序器自动包含。"
